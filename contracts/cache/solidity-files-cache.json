{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1705164423084,
      "contentHash": "b2c039b7ec738e0241865b8e3cc42297",
      "sourceName": "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "access\\IAccessControl.sol\\IAccessControl.json"
        }
      }
    },
    "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1705164423142,
      "contentHash": "da337b36f786d26e7e0826fa874f8d27",
      "sourceName": "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC20\\IERC20.sol\\IERC20.json"
        }
      }
    },
    "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1705164423148,
      "contentHash": "27b5d73b0b8b0b7b8fb3cd44b6e0ddeb",
      "sourceName": "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC721\\IERC721.sol\\IERC721.json"
        }
      }
    },
    "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
      "lastModificationDate": 1705164423150,
      "contentHash": "bb4942e397d9688d164ba177fdb2ef4b",
      "sourceName": "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Enumerable": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "extensions\\IERC721Enumerable.sol\\IERC721Enumerable.json"
        }
      }
    },
    "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1705164423150,
      "contentHash": "00a5e045d4844f66434a25a5c7c425e6",
      "sourceName": "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "extensions\\IERC721Metadata.sol\\IERC721Metadata.json"
        }
      }
    },
    "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1705164423160,
      "contentHash": "48674212f545f00ae3efc963b05ffa18",
      "sourceName": "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "introspection\\IERC165.sol\\IERC165.json"
        }
      }
    },
    "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
      "lastModificationDate": 1705164437908,
      "contentHash": "cae84be8214d4e4efc0a372c720d6d96",
      "sourceName": "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "IERC721Permit": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC721Permit.sol\\IERC721Permit.json"
        }
      }
    },
    "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
      "lastModificationDate": 1705164437908,
      "contentHash": "72a5cd7469d77ff5c51792853e5e2dc3",
      "sourceName": "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/libraries/PoolAddress.sol"
      ],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "INonfungiblePositionManager": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "INonfungiblePositionManager.sol\\INonfungiblePositionManager.json"
        }
      }
    },
    "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
      "lastModificationDate": 1705164437909,
      "contentHash": "eb9d779608162190a150b799631a65da",
      "sourceName": "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IPeripheryImmutableState": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IPeripheryImmutableState.sol\\IPeripheryImmutableState.json"
        }
      }
    },
    "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
      "lastModificationDate": 1705164437909,
      "contentHash": "c4f29c3bea08970cc12c474ec46bf99b",
      "sourceName": "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "IPeripheryPayments": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IPeripheryPayments.sol\\IPeripheryPayments.json"
        }
      }
    },
    "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
      "lastModificationDate": 1705164437910,
      "contentHash": "ff171454f239cc44f0906ceeca46b34d",
      "sourceName": "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "IPoolInitializer": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IPoolInitializer.sol\\IPoolInitializer.json"
        }
      }
    },
    "lib/bunni-oracle/lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
      "lastModificationDate": 1705164437917,
      "contentHash": "480c5e7d7519a51018099854055cc9f6",
      "sourceName": "lib/bunni-oracle/lib/v3-periphery/contracts/libraries/PoolAddress.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "PoolAddress": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "PoolAddress.sol\\PoolAddress.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1705154357760,
      "contentHash": "2df678a5b2611e0d7bc9ef6745d19157",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "test.sol\\DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1705154355971,
      "contentHash": "ac34dc048311bd400c5c5351e7975438",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Base.sol\\CommonBase.json"
        },
        "ScriptBase": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Base.sol\\ScriptBase.json"
        },
        "TestBase": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Base.sol\\TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1705154355971,
      "contentHash": "c4749ea7bff7642862a7ce9520fc21f2",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Script.sol\\Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1705154355971,
      "contentHash": "d136ed3be15b16e8875196a38f225c2f",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdAssertions.sol\\StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1705154355972,
      "contentHash": "a09be3e9abb01b582ef096246a935f63",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdChains.sol\\StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1705154355972,
      "contentHash": "2ffbad9275b4543eb1a17010e9dff279",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdCheats.sol\\StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdCheats.sol\\StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1705154355972,
      "contentHash": "8c35ad419c5b8748575080db5fd58cae",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdError.sol\\stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1705154355973,
      "contentHash": "2e3254214dc16cfad6b77e4d75bc678f",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdInvariant.sol\\StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1705154355973,
      "contentHash": "13cab508e6a2e164c481432248261590",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdJson.sol\\stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1705154355973,
      "contentHash": "fc64b149e462e64dea89f50e9cc0318f",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdMath.sol\\stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1705154355974,
      "contentHash": "023abcd479ed36f04ac72d8bd9bdaa7a",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdStorage.sol\\stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdStorage.sol\\stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1705154355974,
      "contentHash": "f5cb431eb5bd89ef37aaf831fc099459",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdStyle.sol\\StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1705154355975,
      "contentHash": "25124f4c527aaa5248fc213236de55e8",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "StdUtils.sol\\StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1705154355975,
      "contentHash": "7efdfd19fef655d8a6bca92dc3c00415",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Test.sol\\Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1705154355976,
      "contentHash": "bdcec1bbaab577432dd924be921079b3",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Vm.sol\\Vm.json"
        },
        "VmSafe": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Vm.sol\\VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1705154355976,
      "contentHash": "c8cf989d04bc2e3069e3d91facf3b69c",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "console.sol\\console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1705154355978,
      "contentHash": "84bf7223a45eb5be69eae69a26531306",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "console2.sol\\console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1705154355980,
      "contentHash": "5de707a0d82c8f56049fbd3ba28944ed",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IMulticall3.sol\\IMulticall3.json"
        }
      }
    },
    "lib/forge-std/src/mocks/MockERC20.sol": {
      "lastModificationDate": 1705154355980,
      "contentHash": "26beb59eac7137fba19ace493ea445b4",
      "sourceName": "lib/forge-std/src/mocks/MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "MockERC20": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "MockERC20.sol\\MockERC20.json"
        }
      }
    },
    "lib/forge-std/src/mocks/MockERC721.sol": {
      "lastModificationDate": 1705154355980,
      "contentHash": "9ac460493eca5357ce4dfbe58c104d02",
      "sourceName": "lib/forge-std/src/mocks/MockERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IERC721TokenReceiver": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "MockERC721.sol\\IERC721TokenReceiver.json"
        },
        "MockERC721": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "MockERC721.sol\\MockERC721.json"
        }
      }
    },
    "lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1705154355980,
      "contentHash": "b78b3af4008494f560706b3e44286080",
      "sourceName": "lib/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "safeconsole.sol\\safeconsole.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1705155378077,
      "contentHash": "f665fc4a91af3170f86727fc49cc091f",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Ownable": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Ownable.sol\\Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
      "lastModificationDate": 1705155384387,
      "contentHash": "42752f4c198029b7c09ae398a316fc59",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155Errors": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "draft-IERC6093.sol\\IERC1155Errors.json"
        },
        "IERC20Errors": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "draft-IERC6093.sol\\IERC20Errors.json"
        },
        "IERC721Errors": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "draft-IERC6093.sol\\IERC721Errors.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1705155384397,
      "contentHash": "c7c4b0042caa92b10171a186c669e43a",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC20": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC20.sol\\ERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1705155384398,
      "contentHash": "a9abad21a16aa28b1b14280743bce75c",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC20": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC20.sol\\IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
      "lastModificationDate": 1705155378142,
      "contentHash": "d85f9dfd2aecd1d93e70f50e1d46aaab",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC20Burnable": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC20Burnable.sol\\ERC20Burnable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1705155384400,
      "contentHash": "390b05f16136eda58b5b267e68818e48",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC20Metadata.sol\\IERC20Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1705155384401,
      "contentHash": "9aa49457e52db3acc0a319d1af131139",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC721": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC721.sol\\ERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1705155384401,
      "contentHash": "e2de2406ac62088b6cb17bcd80d2050c",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC721.sol\\IERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1705155384402,
      "contentHash": "4f2639905f6ace2cf6793d9e08b18ecd",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC721Receiver.sol\\IERC721Receiver.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1705155378151,
      "contentHash": "706cadca3af593679b544dbc4a9aedcc",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC721Metadata.sol\\IERC721Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
      "lastModificationDate": 1705155378151,
      "contentHash": "9163e06382c42e4b1c6bc301d82c3d78",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC721Holder": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC721Holder.sol\\ERC721Holder.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1705155378153,
      "contentHash": "2783b901218e982baedae531a748ed8d",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Context": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Context.sol\\Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1705155378155,
      "contentHash": "232a9f6be33f192fc1bf3871516f57fc",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Strings": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Strings.sol\\Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1705155384408,
      "contentHash": "2eda65da6379d6cae75a10a53a332de6",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC165": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ERC165.sol\\ERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1705155384409,
      "contentHash": "e5ab9d1880e29adb92916789d4d033a6",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC165": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IERC165.sol\\IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1705155384409,
      "contentHash": "41bde2c74f0958f83169599b133a1f59",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Math": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Math.sol\\Math.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1705155378159,
      "contentHash": "ae4e96244b968d38eb7a4902b7f86b2b",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SignedMath": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "SignedMath.sol\\SignedMath.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
      "lastModificationDate": 1705163989709,
      "contentHash": "448be68fe8d48001cb92e4c241b78629",
      "sourceName": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol"
      ],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3Pool": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3Pool.sol\\IUniswapV3Pool.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
      "lastModificationDate": 1705163989712,
      "contentHash": "dede1acb09c9ac66ac08e513ca1432d0",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolActions": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3PoolActions.sol\\IUniswapV3PoolActions.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
      "lastModificationDate": 1705163989713,
      "contentHash": "b69b49c1b2c28866166e09baae3db4ed",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolDerivedState": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3PoolDerivedState.sol\\IUniswapV3PoolDerivedState.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
      "lastModificationDate": 1705163989714,
      "contentHash": "7964b4a0c7ba595248460f74f8683252",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolEvents": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3PoolEvents.sol\\IUniswapV3PoolEvents.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
      "lastModificationDate": 1705163989714,
      "contentHash": "6a1b3673618d33cd9897b2fab44b5421",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolImmutables": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3PoolImmutables.sol\\IUniswapV3PoolImmutables.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
      "lastModificationDate": 1705163989715,
      "contentHash": "34da6322914eb22e1e5ed5d49f69e636",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolOwnerActions": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3PoolOwnerActions.sol\\IUniswapV3PoolOwnerActions.json"
        }
      }
    },
    "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
      "lastModificationDate": 1705163989715,
      "contentHash": "4eeaf6949c38e9890febadd5f9f38d05",
      "sourceName": "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolState": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IUniswapV3PoolState.sol\\IUniswapV3PoolState.json"
        }
      }
    },
    "script/Counter.s.sol": {
      "lastModificationDate": 1705154354611,
      "contentHash": "7539680fbd3ad49c6632713cc2bb6bf6",
      "sourceName": "script/Counter.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src\\Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "CounterScript": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "Counter.s.sol\\CounterScript.json"
        }
      }
    },
    "src/LPMoney.sol": {
      "lastModificationDate": 1705245371477,
      "contentHash": "8e22c0369b830471fb0c4e600c685fbe",
      "sourceName": "src/LPMoney.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/access/IAccessControl.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC20/IERC20.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/interfaces/INonfungiblePositionManager.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/libraries/PoolAddress.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/v3-core\\contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "src\\interfaces\\IGhoToken.sol",
        "src\\interfaces\\ILPpriceOracle.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "LPMoney": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "LPMoney.sol\\LPMoney.json"
        }
      }
    },
    "src/interfaces/IGhoFacilitator.sol": {
      "lastModificationDate": 1705153996611,
      "contentHash": "3d478ba774a5b67d354ef3db3d2ba3ae",
      "sourceName": "src/interfaces/IGhoFacilitator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IGhoFacilitator": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IGhoFacilitator.sol\\IGhoFacilitator.json"
        }
      }
    },
    "src/interfaces/IGhoToken.sol": {
      "lastModificationDate": 1705153995076,
      "contentHash": "46c9c6ada29109ab3c61053fa50f6290",
      "sourceName": "src/interfaces/IGhoToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/access/IAccessControl.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IGhoToken": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "IGhoToken.sol\\IGhoToken.json"
        }
      }
    },
    "src/interfaces/ILPpriceOracle.sol": {
      "lastModificationDate": 1705220229918,
      "contentHash": "70b0e9407677c57acfa063faddb5a354",
      "sourceName": "src/interfaces/ILPpriceOracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/v3-core\\contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "ILPpriceOracle": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "ILPpriceOracle.sol\\ILPpriceOracle.json"
        }
      }
    },
    "test/LPMoney.t.sol": {
      "lastModificationDate": 1705244610844,
      "contentHash": "12a78f872da18e3615d0de7654de05b5",
      "sourceName": "test/LPMoney.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/access/IAccessControl.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC20/IERC20.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/interfaces/INonfungiblePositionManager.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/libraries/PoolAddress.sol",
        "lib/forge-std/lib/ds-test/src\\test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src\\Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/mocks/MockERC20.sol",
        "lib/forge-std/src/mocks/MockERC721.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts\\contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/v3-core\\contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "src\\LPMoney.sol",
        "src\\interfaces\\IGhoToken.sol",
        "src\\interfaces\\ILPpriceOracle.sol",
        "test\\mocks\\GhoMock.sol",
        "test\\mocks\\LpCollectionMock.sol",
        "test\\mocks\\PriceOracleMock.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "LPMoneyTest": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "LPMoney.t.sol\\LPMoneyTest.json"
        }
      }
    },
    "test/mocks/GhoMock.sol": {
      "lastModificationDate": 1705238927116,
      "contentHash": "e5a805df7aa40512c1d6b9f291b2dc75",
      "sourceName": "test/mocks/GhoMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/access/IAccessControl.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "src\\interfaces\\IGhoToken.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "GhoMock": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "GhoMock.sol\\GhoMock.json"
        }
      }
    },
    "test/mocks/LpCollectionMock.sol": {
      "lastModificationDate": 1705240535778,
      "contentHash": "31216b1c81430549b2244802ab29e589",
      "sourceName": "test/mocks/LpCollectionMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts\\contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/interfaces/INonfungiblePositionManager.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
        "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol",
        "lib/bunni-oracle/lib/v3-periphery\\contracts/libraries/PoolAddress.sol",
        "lib/openzeppelin-contracts\\contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts\\contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "LpCollectionMock": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "LpCollectionMock.sol\\LpCollectionMock.json"
        }
      }
    },
    "test/mocks/PriceOracleMock.sol": {
      "lastModificationDate": 1705231133733,
      "contentHash": "0ba460547f95b00a91f082e027b7c5e1",
      "sourceName": "test/mocks/PriceOracleMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        }
      },
      "imports": [
        "lib/v3-core\\contracts/interfaces/IUniswapV3Pool.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "src\\interfaces\\ILPpriceOracle.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "PriceOracleMock": {
          "0.8.20+commit.a1b79de6.Windows.msvc": "PriceOracleMock.sol\\PriceOracleMock.json"
        }
      }
    }
  }
}