{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ghoToken",
      "outputs": [
        {
          "internalType": "contract IGhoToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpCollection",
      "outputs": [
        {
          "internalType": "contract LpCollectionMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpMoney",
      "outputs": [
        {
          "internalType": "contract LPMoney",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract PriceOracleMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_liqudation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461002d57600160ff1981816007541617600755600b541617600b556170b190816100338239f35b600080fdfe60808060405260043610156200001457600080fd5b600090813560e01c9081630a9254e4146200237c575080631e2fc4f71462001eb25780631ed7831c1462001e015780632630c12f1462001dad5780632ade38801462001a385780633a61420c14620013565780633e5e3c2314620012a55780633f7286f414620011f45780635996db9114620011a057806366d9a9a01462000fc75780637035559214620009a057806385226c811462000824578063916a17c614620004a5578063b5508aa914620002fc578063ba414fa614620002b5578063bf2e848c1462000261578063e20c9f71146200019f578063ea846d13146200014b5763fa7626d4146200010657600080fd5b346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857602060ff600754166040519015158152f35b80fd5b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857602073ffffffffffffffffffffffffffffffffffffffff601f5416604051908152f35b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857604051601380548083529083526020808301937f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09092915b82821062000233576200022f85620002228189038262002802565b6040519182918262002571565b0390f35b835473ffffffffffffffffffffffffffffffffffffffff168652948501946001938401939091019062000207565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857602073ffffffffffffffffffffffffffffffffffffffff601d5416604051908152f35b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000148576020620002f2620028c0565b6040519015158152f35b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000148576017546200033b81620029ce565b6200034a604051918262002802565b81815260209182820160176000527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15906000905b8382106200039657604051806200022f8782620026e8565b60405160009184549160019280841c9084811680156200049a575b8b831081146200046d578284528b949392918115620004315750600114620003f4575b50620003e581600196038262002802565b8152019301910190916200037e565b60008881528481209650905b808210620004195750810183019450620003e5620003d4565b8654838301860152958501958b949091019062000400565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168584015250151560051b810183019450620003e5620003d4565b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b91607f1691620003b1565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857601a54620004e481620029ce565b90620004f4604051928362002802565b808252601a8352827f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e602084015b8383106200053a57604051806200022f8782620025e9565b6040516200054881620027e5565b825473ffffffffffffffffffffffffffffffffffffffff1681526040516001840180548083529089526020808a20908301918a915b8160078401106200079c5784600197946002979460209794620005eb94549181811062000767575b81811062000732575b818110620006fd575b818110620006c8575b81811062000693575b8181106200065e575b8181106200062b575b10620005fe575b50038262002802565b8382015281520192019201919062000522565b7fffffffff00000000000000000000000000000000000000000000000000000000168152860138620005e2565b828a1b7fffffffff00000000000000000000000000000000000000000000000000000000168452928901928b01620005db565b92898c917fffffffff000000000000000000000000000000000000000000000000000000008560401b168152019301620005d2565b92898c917fffffffff000000000000000000000000000000000000000000000000000000008560601b168152019301620005c9565b92898c917fffffffff000000000000000000000000000000000000000000000000000000008560801b168152019301620005c0565b92898c917fffffffff000000000000000000000000000000000000000000000000000000008560a01b168152019301620005b7565b92898c917fffffffff000000000000000000000000000000000000000000000000000000008560c01b168152019301620005ae565b92898c917fffffffff000000000000000000000000000000000000000000000000000000008560e01b168152019301620005a5565b92600161010060089286547fffffffff0000000000000000000000000000000000000000000000000000000090818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e08201520194019201916200057d565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000148576018546200086381620029ce565b62000872604051918262002802565b81815260209182820160186000527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e906000905b838210620008be57604051806200022f8782620026e8565b60405160009184549160019280841c90848116801562000995575b8b831081146200046d578284528b9493929181156200095957506001146200091c575b506200090d81600196038262002802565b815201930191019091620008a6565b60008881528481209650905b8082106200094157508101830194506200090d620008fc565b8654838301860152958501958b949091019062000928565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168584015250151560051b8101830194506200090d620008fc565b91607f1691620008d9565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1562000ef95781806040517f06447d5600000000000000000000000000000000000000000000000000000000815281816001958660048301528160249586925af190811562000fbc57839162000fa4575b505073ffffffffffffffffffffffffffffffffffffffff9081601d5416803b1562000f585783809183604051809481937f40d097c30000000000000000000000000000000000000000000000000000000083528a60048401525af190811562000f4d57849162000f8c575b505081601d541682601f5416813b1562000eea5784916044839260405194859384927fa22cb46500000000000000000000000000000000000000000000000000000000845260048401528a888401525af190811562000f4d57849162000f74575b505081601e5416803b1562000f585783809183604051809481937f059d8f970000000000000000000000000000000000000000000000000000000083526103e860048401525af190811562000f4d57849162000f5c575b505081601f5416803b1562000f585783809183604051809481937fa0712d680000000000000000000000000000000000000000000000000000000083528160048401525af190811562000f4d57849162000f31575b505081601c541682601f541690604051917f095ea7b30000000000000000000000000000000000000000000000000000000083526004830152610320838301528160448160209788945af1801562000ec75762000efd575b508482601f5416803b1562000ef95781809184604051809481937f0aebeb4e0000000000000000000000000000000000000000000000000000000083528160048401525af1801562000eee5762000ed2575b5050808383601c5416604051928380927f70a082310000000000000000000000000000000000000000000000000000000082528960048301525afa801562000ec757869062000e8c575b62000cb1915062002b19565b8282601d5416604051928380927f6352211e0000000000000000000000000000000000000000000000000000000082528960048301525afa90811562000e8157859162000e4d575b50169180830362000d08578380f35b7f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060806040518481526025858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d0000000000000000000000000000000000000000000000000000006060820152a1604051926040845262000dc560408501604090600a81527f2020202020204c6566740000000000000000000000000000000000000000000060208201520190565b9083850152837f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9485920390a16040519182916040835262000e3560408401604090600a81527f202020202052696768740000000000000000000000000000000000000000000060208201520190565b918301520390a162000e4662002a15565b3880808380f35b62000e729150833d851162000e79575b62000e69818362002802565b810190620029e7565b3862000cf9565b503d62000e5d565b6040513d87823e3d90fd5b508381813d831162000ebf575b62000ea5818362002802565b8101031262000eba5762000cb1905162000ca5565b600080fd5b503d62000e99565b6040513d88823e3d90fd5b62000edd90620027a1565b62000eea57843862000c5b565b8480fd5b6040513d84823e3d90fd5b5080fd5b62000f2190843d861162000f29575b62000f18818362002802565b810190620028a6565b503862000c09565b503d62000f0c565b62000f3c90620027a1565b62000f4957823862000bb1565b8280fd5b6040513d86823e3d90fd5b8380fd5b62000f6790620027a1565b62000f4957823862000b5c565b62000f7f90620027a1565b62000f4957823862000b05565b62000f9790620027a1565b62000f4957823862000aa4565b62000faf90620027a1565b62000ef957813862000a39565b6040513d85823e3d90fd5b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000148576019546200100681620029ce565b9062001016604051928362002802565b80825260198352827f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695602084015b8383106200105c57604051806200022f8782620025e9565b6040516200106a81620027e5565b825473ffffffffffffffffffffffffffffffffffffffff1681526040516001840180548083529089526020808a20908301918a915b8160078401106200111857846001979460029794602097946200110594549181811062000767578181106200073257818110620006fd57818110620006c85781811062000693578181106200065e578181106200062b5710620005fe5750038262002802565b8382015281520192019201919062001044565b92600161010060089286547fffffffff0000000000000000000000000000000000000000000000000000000090818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e08201520194019201916200109f565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857602073ffffffffffffffffffffffffffffffffffffffff601c5416604051908152f35b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857604051601580548083529083526020808301937f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47592915b82821062001277576200022f85620002228189038262002802565b835473ffffffffffffffffffffffffffffffffffffffff16865294850194600193840193909101906200125c565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857604051601680548083529083526020808301937fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428992915b82821062001328576200022f85620002228189038262002802565b835473ffffffffffffffffffffffffffffffffffffffff16865294850194600193840193909101906200130d565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112620001485780737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1562001a35576040517f06447d5600000000000000000000000000000000000000000000000000000000808252600160048301526024918481848183885af190811562000e8157859162001a1d575b505073ffffffffffffffffffffffffffffffffffffffff9283601d5416803b15620019aa5785809185604051809481937f40d097c3000000000000000000000000000000000000000000000000000000008352600160048401525af190811562000ec757869162001a05575b505083601d541684601f5416813b15620019d15786916044839260405194859384927fa22cb465000000000000000000000000000000000000000000000000000000008452600484015260018a8401525af190811562000ec7578691620019ed575b505083601e541691823b15620019aa5760405186818681837f059d8f9700000000000000000000000000000000000000000000000000000000988983526103e860048401525af1908115620019c6578791620019d5575b505084601f5416803b15620019d15786809186604051809481937fa0712d680000000000000000000000000000000000000000000000000000000083528160048401525af1908115620019c6578791620019ae575b5050813b15620019aa57859184839260405194859384928352600260048401525af190811562000e815785916200198d575b505082601c541690813b1562000eea57604051917f40c10f190000000000000000000000000000000000000000000000000000000083526002600484015285836044818361032095868a8401525af192831562000ec757869362001971575b5084601c541685601f541691604051927f095ea7b3000000000000000000000000000000000000000000000000000000008452600484015285830152816044816020998a945af1801562000fbc576200194f575b5083601e541690813b1562000f495782918483926040519485938492835261035260048401525af1801562000eee5762001937575b5082601f5416803b1562000ef95781809184604051809481937f415f12400000000000000000000000000000000000000000000000000000000083528160048401525af1801562000eee576200191f575b5050808383601c5416604051928380927f70a08231000000000000000000000000000000000000000000000000000000008252600260048301525afa801562000e81578590620018e9575b6200172a915062002b19565b8282601d5416604051928380927f6352211e0000000000000000000000000000000000000000000000000000000082528860048301525afa90811562000f4d578491620018c7575b5016906002820362001782578280f35b7f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060806040518381526025848201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d0000000000000000000000000000000000000000000000000000006060820152a160405191604083526200183f60408401604090600a81527f2020202020204c6566740000000000000000000000000000000000000000000060208201520190565b9082840152827f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9384920390a16040518091604082526002620018b060408401604090600a81527f202020202052696768740000000000000000000000000000000000000000000060208201520190565b918301520390a1620018c162002a15565b38808280f35b620018e29150833d851162000e795762000e69818362002802565b3862001772565b508381813d831162001917575b62001902818362002802565b8101031262000eba576200172a90516200171e565b503d620018f6565b6200192a90620027a1565b62000f58578338620016d3565b6200194290620027a1565b62000f5857833862001682565b6200196990863d881162000f295762000f18818362002802565b50386200164d565b6200197f90939193620027a1565b62000eea57849138620015f9565b6200199890620027a1565b620019a55783386200159a565b505050fd5b8580fd5b620019b990620027a1565b620019aa57853862001568565b6040513d89823e3d90fd5b8680fd5b620019e090620027a1565b620019aa57853862001513565b620019f890620027a1565b62000eea578438620014bc565b62001a1090620027a1565b62000eea5784386200145a565b62001a2890620027a1565b620019a5578338620013ee565b50fd5b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857601b549062001a7882620029ce565b62001a87604051918262002802565b828152602081018093601b84527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc184925b82841062001c0f57858588604051916020830190602084525180915260408301600590604083831b860101939580925b84841062001af65786860387f35b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08782030184528751906020604082019273ffffffffffffffffffffffffffffffffffffffff815116835201519160406020830152825180915260609060208284019282871b850101940192865b82811062001b8e57505050505060208060019299019401940192969493919062001ae8565b909192939460208080837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087600196030189527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8b5162001bfd81518092818752878088019101620025c4565b01160101970195019392910162001b69565b60405162001c1d81620027e5565b73ffffffffffffffffffffffffffffffffffffffff83541681526001830180549062001c4982620029ce565b9162001c59604051938462002802565b808352602083019160005260206000206000925b82841062001c9557505050506001928260209283600295015281520192019301929062001ab8565b604051600083548060011c90600181161562001da2575b60208210600182161462001d75578184526001811690811562001d33575060011462001cf8575b506001928262001ce98594602094038262002802565b81520192019301929062001c6d565b6000858152602081209092505b81831062001d1c5750508101602001600162001cd3565b600181602092548386880101520192019162001d05565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208581019190915291151560051b840190910191506001905062001cd3565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b90607f169062001cac565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857602073ffffffffffffffffffffffffffffffffffffffff601e5416604051908152f35b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200014857604051601480548083529083526020808301937fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec92915b82821062001e84576200022f85620002228189038262002802565b835473ffffffffffffffffffffffffffffffffffffffff168652948501946001938401939091019062001e69565b50346200014857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112620001485780737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1562001a35578160405180927f06447d56000000000000000000000000000000000000000000000000000000008252600160048301528160249687925af1801562000eee576200236a575b509073ffffffffffffffffffffffffffffffffffffffff8281601d5416803b1562000ef95781809185604051809481937f40d097c3000000000000000000000000000000000000000000000000000000008352600160048401525af1801562000eee5762002352575b5081601d541682601f5416813b1562000f495782916044839260405194859384927fa22cb465000000000000000000000000000000000000000000000000000000008452600484015260018a8401525af1801562000eee576200233a575b5081601e5416803b1562000ef95781809185604051809481937f059d8f970000000000000000000000000000000000000000000000000000000083526103e860048401525af1801562000eee5762002322575b5081601f5416803b1562000ef95781809185604051809481937fa0712d680000000000000000000000000000000000000000000000000000000083528160048401525af1801562000eee576200230a575b505080601c54169060405180927f70a0823100000000000000000000000000000000000000000000000000000000825260016004830152818560209586935afa90811562000e81578591620022d7575b5061032080820362002191575b50508181601d5416604051948580927f6352211e0000000000000000000000000000000000000000000000000000000082528860048301525afa92831562000f4d5784936200216d575b5080601f541692169180830362000d08578380f35b62002189919350823d841162000e795762000e69818362002802565b913862002158565b7f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060806040518681526022878201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d0000000000000000000000000000000000000000000000000000000000006060820152a160405191604083526200224e60408401604090600a81527f2020202020204c6566740000000000000000000000000000000000000000000060208201520190565b9085840152827fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89384920390a1604051809160408252620022bd60408301604090600a81527f202020202052696768740000000000000000000000000000000000000000000060208201520190565b90868301520390a1620022cf62002a15565b38806200210e565b90508281813d831162002302575b620022f1818362002802565b8101031262000eba57513862002101565b503d620022e5565b6200231590620027a1565b62000f49578238620020b1565b6200232d90620027a1565b62000f4957823862002060565b6200234590620027a1565b62000f495782386200200d565b6200235d90620027a1565b62000f4957823862001faf565b6200237590620027a1565b3862001f46565b90503462000ef957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000ef9576114839081810167ffffffffffffffff9282821084831117620025445790829162003ea28339039083f090811562000eee5773ffffffffffffffffffffffffffffffffffffffff90817fffffffffffffffffffffffff0000000000000000000000000000000000000000931683601c541617601c55604051611bb080820190828210848311176200251757908291620053258339039085f0801562000f4d57821683601d541617601d556040516101a78082019082821084831117620025175790829162006ed58339039085f0801562000f4d578216908184601e541617601e5582601c54169183601d5416604051936112408086019486861090861117620024ea57918593916080959362002c62863989845260208401526040830152606082015203019084f0801562000fbc571690601f541617601f5580f35b6024897f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6020908160408183019282815285518094520193019160005b82811062002599575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016200258a565b60005b838110620025d85750506000910152565b8181015183820152602001620025c7565b602080820190808352835180925260409283810182858560051b840101960194600080935b8685106200262157505050505050505090565b9091929394887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08383999a9b030186528951826060818885019373ffffffffffffffffffffffffffffffffffffffff8151168652015193888382015284518094520192019085905b808210620026ac5750505090806001929a0195019501939695949291906200260e565b919380600192947fffffffff00000000000000000000000000000000000000000000000000000000875116815201940192018993929162002689565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106200271d5750505050505090565b909192939495848080837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8c516200278c81518092818752878088019101620025c4565b0116010198019301930191949392906200270c565b67ffffffffffffffff8111620027b657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117620027b657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117620027b657604052565b3d15620028a1573d9067ffffffffffffffff8211620027b657604051916200289560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116018462002802565b82523d6000602084013e565b606090565b9081602091031262000eba5751801515810362000eba5790565b60075460081c60ff1615620028db5760ff60075460081c1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d803b620028fd575090565b60405160208101908282527f6661696c65640000000000000000000000000000000000000000000000000000604082015260408152606081019080821067ffffffffffffffff831117620025445781620029a860248796959493879460405260808101957f667f9d7000000000000000000000000000000000000000000000000000000000875262002997825180926084850190620025c4565b810103600481018452018262002802565b51925af150620029cb620029bb62002844565b60208082518301019101620028a6565b90565b67ffffffffffffffff8111620027b65760051b60200190565b9081602091031262000eba575173ffffffffffffffffffffffffffffffffffffffff8116810362000eba5790565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62002a61575b506101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6007541617600755565b6040519060208201908082527f6661696c6564000000000000000000000000000000000000000000000000000060408401526001606084015260608352608083019183831067ffffffffffffffff841117620027b65760008362002b0260248397849760405260a08101957f70ca10bb000000000000000000000000000000000000000000000000000000008752620029978251809260a4850190620025c4565b51925af15062002b1162002844565b503862002a32565b8062002b225750565b62002c4b60407f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506080825160208152602260208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e848201527f745d0000000000000000000000000000000000000000000000000000000000006060820152a180519281845262002be2828501604090600a81527f2020202020204c6566740000000000000000000000000000000000000000000060208201520190565b906020850152837fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89485920390a180519181839283528201604090600a81527f202020202052696768740000000000000000000000000000000000000000000060208201520190565b600060208301520390a162002c5f62002a15565b56fe6080346100bd57601f61124038819003918201601f19168301916001600160401b038311848410176100c2578084926080946040528339810103126100bd57610047816100d8565b610053602083016100d8565b604083015190926001600160a01b03808316929091908390036100bd5760600151938185168095036100bd578160018060a01b0319941684600154161760015516826000541617600055816002541617600255600354161760035560405161115390816100ed8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100bd5756fe608060409080825260048036101561001657600080fd5b600091823560e01c9081630aebeb4e146108f157508063150b7a02146107da5780632f1c2ed81461075d578063415f1240146103c55780636339fabe1461037f5763a0712d681461006657600080fd5b3461037b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037b5780359273ffffffffffffffffffffffffffffffffffffffff918260025416803b156102d15782517f23b872dd00000000000000000000000000000000000000000000000000000000815233838201908152306020820152604081018890529091869183919082908490829060600103925af1801561037157908591610359575b505061012085610ef9565b611f409081810291818304149015171561032d5761271090049233855281602052828520805490680100000000000000008210156103015761016c82899260016101a295018155610cb6565b9091907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83549160031b92831b921b1916179055565b33855281602052828520547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81019081116102d557600186978551926101e784610be2565b33845267ffffffffffffffff6020850191168152868401918883528952600560205284878a209451167fffffffff000000000000000000000000000000000000000000000000000000007bffffffffffffffff00000000000000000000000000000000000000008654935160a01b169216171783555191015584541692833b156102d1576044859283855196879485937f40c10f19000000000000000000000000000000000000000000000000000000008552339085015260248401525af19081156102c857506102b55750f35b6102be90610c2d565b6102c55780f35b80fd5b513d84823e3d90fd5b8480fd5b6024866011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024876041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024856011847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61036290610c2d565b61036d578338610115565b8380fd5b83513d87823e3d90fd5b5080fd5b509190346102c55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c557506103be60209235610ef9565b9051908152f35b503461037b57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261075957813561040281610ef9565b818552600586528285209083519161041983610be2565b8054918573ffffffffffffffffffffffffffffffffffffffff94600167ffffffffffffffff8787169687845260a01c1694858d84015201549182910152612af89081810291818304148115171561064e579085949392918997968b54168c8c8b5192838092817f23b872dd000000000000000000000000000000000000000000000000000000009e8f8252883033928401926104df9360409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af1801561074f57610722575b50858b541690813b1561071e578b9060248c838d5195869485937f42966c680000000000000000000000000000000000000000000000000000000085528401525af1801561071457908b916106fc575b505061271090041061067a578188528689528588208054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820191821161064e5789896105a8829d958b610599600599976105e397610cb6565b95905494888252895220610cb6565b91909260031b1c907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83549160031b92831b921b1916179055565b88528681526105f3868920610cfd565b8388525260006001858820888155015560025416803b1561064a57835192835230948301948552336020860152604085019190915290928491849182908490829060600103925af19081156102c857506102b55750f35b8580fd5b60248a60118b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6084878a8851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f4c504d6f6e65793a206865616c74687920706f736974696f6e2063616e6e6f7460448201527f206265206c6971756964617465640000000000000000000000000000000000006064820152fd5b61070590610c2d565b61071057893861053e565b8980fd5b89513d8d823e3d90fd5b8b80fd5b610741908d803d10610748575b6107398183610c5d565b810190610c9e565b50386104ee565b503d61072f565b8a513d8e823e3d90fd5b8280fd5b82843461037b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037b57610796610b97565b61079e610bbf565b906044359362ffffff851685036102c5575060209373ffffffffffffffffffffffffffffffffffffffff926107d292610d74565b915191168152f35b509190346102c55760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c557610814610b97565b5061081d610bbf565b506064359267ffffffffffffffff90818511610759573660238601121561075957848101359182116108c5575082519361087f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160186610c5d565b8185523660248383010111610759579060209481602487940184830137010152517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b8260416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9390503461075957602093847ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261036d578235908185526005865282852061093b82610be2565b83815473ffffffffffffffffffffffffffffffffffffffff93600167ffffffffffffffff8684169384845260a01c1694858c840152015492839101523388528689523303610b1557865485517f23b872dd0000000000000000000000000000000000000000000000000000000080825233828a01908152306020820152604081018590529096959493928b91839187169082908d90829060600103925af18015610b0b57610aee575b508288541690813b15610aea57889160248392895194859384927f42966c680000000000000000000000000000000000000000000000000000000084528d8401525af18015610ae057610acd575b503387528588528487208054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211610aa1576105a8600593610a7e8b9c94610a9094610cb6565b92905491338d528b86528a8d20610cb6565b3388528681526105f3868920610cfd565b60248960118a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b610ad990979197610c2d565b9538610a32565b86513d8a823e3d90fd5b8880fd5b610b04908a3d8c11610748576107398183610c5d565b50386109e4565b87513d8b823e3d90fd5b608486898751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602b60248201527f4c504d6f6e65793a2063616c6c6572206973206e6f7420746865206f776e657260448201527f206f6620746865204e46540000000000000000000000000000000000000000006064820152fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610bba57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610bba57565b6060810190811067ffffffffffffffff821117610bfe57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610bfe57604052565b6080810190811067ffffffffffffffff821117610bfe57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610bfe57604052565b90816020910312610bba57518015158103610bba5790565b8054821015610cce5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8054908115610d45577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80920191610d358383610cb6565b909182549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b916001549183918160409384916000838051610d8f81610be2565b828152826020820152015273ffffffffffffffffffffffffffffffffffffffff9788821689821611610ea2575b505062ffffff8780845193610dd085610be2565b1695868452169384602084015216918291015281831015610bba578351916020830193845284830152606082015260608152610e0b81610c41565b5190209051907fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208301937fff00000000000000000000000000000000000000000000000000000000000000855260601b16602183015260358201527fa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff605582015260558152610e9b81610c41565b5190201690565b945090503880610dbc565b519073ffffffffffffffffffffffffffffffffffffffff82168203610bba57565b51908160020b8203610bba57565b51906fffffffffffffffffffffffffffffffff82168203610bba57565b73ffffffffffffffffffffffffffffffffffffffff8060025416916040519283917f99fbab8800000000000000000000000000000000000000000000000000000000835260048301528160246101809384935afa801561102757600090818290839684958594611033575b5050859492610f8f60c495936fffffffffffffffffffffffffffffffff936020996003541695610d74565b9360405198899788967f9d025db600000000000000000000000000000000000000000000000000000000885216600487015260020b602486015260020b604485015216606483015260786084830152602860a48301525afa90811561102757600091610ff9575090565b906020823d821161101f575b8161101260209383610c5d565b810103126102c557505190565b3d9150611005565b6040513d6000823e3d90fd5b949750945050505081813d8311611116575b61104f8183610c5d565b810103126107595780516bffffffffffffffffffffffff8116036107595761107960208201610ead565b5061108660408201610ead565b9261109360608301610ead565b9060808301519062ffffff821682036102c557509160c4916fffffffffffffffffffffffffffffffff60209594610f8f6110cf60a08601610ece565b6110db60c08701610ece565b996111036101606110ee60e08a01610edc565b986110fc6101408201610edc565b5001610edc565b5094929099979850939550819250610f64565b503d61104556fea2646970667358221220d873de4c6532df1f4f67a44eaf7a90149abd3491f2bb8082c31fe95d4da1441364736f6c634300081400336080346200030c576040906001600160401b0390808301828111828210176200020c578352600781526020916626bcaa37b5b2b760c91b838301528351848101818110838211176200020c578552600390818152624d544b60e81b858201528351908382116200020c578254916001958684811c9416801562000301575b88851014620002eb578190601f9485811162000295575b5088908583116001146200022e5760009262000222575b505060001982861b1c191690861b1783555b80519384116200020c5760049586548681811c9116801562000201575b82821014620001ec57838111620001a1575b508092851160011462000133575093839491849260009562000127575b50501b92600019911b1c19161790555b516111719081620003128239f35b01519350388062000109565b92919084601f1981168860005285600020956000905b898383106200018657505050106200016b575b50505050811b01905562000119565b01519060f884600019921b161c19169055388080806200015c565b85870151895590970196948501948893509081019062000149565b87600052816000208480880160051c820192848910620001e2575b0160051c019087905b828110620001d5575050620000ec565b60008155018790620001c5565b92508192620001bc565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000da565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ab565b90889350601f19831691876000528a6000209260005b8c8282106200027e575050841162000265575b505050811b018355620000bd565b015160001983881b60f8161c1916905538808062000257565b8385015186558c9790950194938401930162000244565b90915085600052886000208580850160051c8201928b8610620002e1575b918a91869594930160051c01915b828110620002d157505062000094565b600081558594508a9101620002c1565b92508192620002b3565b634e487b7160e01b600052602260045260246000fd5b93607f16936200007d565b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610afd57508163095ea7b3146109f857816318160ddd146109bb5781631ec90f2e146108e557816323b872dd1461088a578163248a9ca3146108505781632f2ff15d146101ae578163313ce5671461081657816336568abe146101ae57816340c10f191461071157816342966c68146106d5578163433bef44146106d0578163550d9964146106d057816370a082311461066f57816379cc67901461061e5781637fc24def1461058957816391d148541461054657816395d89b41146103da578163a11812ba1461039e578163a9059cbb1461034f578163aa02f94a14610308578163af93df57146102b2578163d46ec0ed146101b357508063d547741f146101ae5763dd62ed3e1461013857600080fd5b346101aa57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa5780602092610172610c89565b61017a610cb1565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b610cd4565b8284346102af57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af576101ee610c89565b5060608380516101fd81610d47565b8381528385820152015282519261021384610d47565b8184528284019382855281519284840184811067ffffffffffffffff8211176102835761027f959697508352835281810192835281519585879687526fffffffffffffffffffffffffffffffff8093511690870152511690840152516060808401526080830190610c2b565b0390f35b60248260418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b80fd5b5050346101aa577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af576102e9610c89565b506024356fffffffffffffffffffffffffffffffff8116036102af5780f35b8284346102af5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af57610341610c89565b508151908082526020820152f35b5050346101aa57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa5760209061039761038d610c89565b6024359033610dd3565b5160018152f35b83346102af5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af576103d6610c89565b5080f35b8284346102af57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af5781519181845492600184811c9181861695861561053c575b6020968785108114610510579087899a92868b999a9b5291826000146104c857505060011461046d575b858861027f8961045e848a0385610d92565b51928284938452830190610c2b565b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104b0575050508201018161045e61027f8861044c565b8054848a018601528895508794909301928101610496565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168882015294151560051b8701909401945085935061045e925061027f915089905061044c565b60248360228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b92607f1692610422565b5050346101aa57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa57602090610581610cb1565b505160018152f35b8390346101aa5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa576105c2610c89565b506024359067ffffffffffffffff9081831161061a573660238401121561061a5782013590811161061657369101602401116102af576044356fffffffffffffffffffffffffffffffff8116036102af5780f35b8280fd5b8380fd5b5050346101aa577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af5761066c610658610c89565b60243590610667823383610f14565b611069565b80f35b5050346101aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa578060209273ffffffffffffffffffffffffffffffffffffffff6106c1610c89565b16815280845220549051908152f35b610d0d565b8390346101aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa5761066c903533611069565b9190503461061657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106165761074a610c89565b9073ffffffffffffffffffffffffffffffffffffffff60243592169283156107e857600254908382018092116107bc575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8460249251917fec442f05000000000000000000000000000000000000000000000000000000008352820152fd5b5050346101aa57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa576020905160128152f35b5050346101aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa5751908152602090f35b5050346101aa5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa576020906103976108c9610c89565b6108d1610cb1565b604435916108e0833383610f14565b610dd3565b905082346102af57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102af578251906020908183019383851067ffffffffffffffff86111761098f57509093929182845281815283519485948186019282875251809352850193925b82811061096257505050500390f35b835173ffffffffffffffffffffffffffffffffffffffff1685528695509381019392810192600101610953565b9060416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050346101aa57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa576020906002549051908152f35b90503461061657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261061657610a30610c89565b602435903315610ace5773ffffffffffffffffffffffffffffffffffffffff16918215610a9f57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b602490858551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b602483868651917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b8484346101aa57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101aa578160035492600184811c91818616958615610c21575b6020968785108114610510578899509688969785829a529182600014610bdc575050600114610b80575b50505061027f929161045e910385610d92565b9190869350600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610bc4575050508201018161045e61027f610b6d565b8054848a018601528895508794909301928101610bab565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b8601909301935084925061045e915061027f9050610b6d565b92607f1692610b43565b919082519283825260005b848110610c755750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610c36565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610cac57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610cac57565b34610cac5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610cac57610d0b610cb1565b005b34610cac5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610cac57602060405160008152f35b6060810190811067ffffffffffffffff821117610d6357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d6357604052565b9173ffffffffffffffffffffffffffffffffffffffff808416928315610ee35716928315610eb25760009083825281602052604082205490838210610e5a575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff8093169160009383855260016020526040938486209183169182875260205284862054927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8403610f7f575b50505050505050565b84841061101357508015610fe3578115610fb357855260016020528385209085526020520391205538808080808080610f76565b6024868651907f94280d620000000000000000000000000000000000000000000000000000000082526004820152fd5b6024868651907fe602df050000000000000000000000000000000000000000000000000000000082526004820152fd5b85517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9190911660048201526024810184905260448101859052606490fd5b9073ffffffffffffffffffffffffffffffffffffffff8216908115610ee357600092828452836020526040842054908282106110e35750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fdfea264697066735822122005404ec0389ba9a92a3995b0c113ee85bc8ddd7f1c5f8d4b5d183528891f91d264736f6c634300081400336080346200030a576001600160401b039060409080820183811182821017620002f4578252600781526020926626bcaa37b5b2b760c91b84830152825183810181811083821117620002f457845260038152624d544b60e81b85820152825190828211620002f45760008054926001958685811c95168015620002e9575b89861014620002d5578190601f9586811162000282575b5089908683116001146200021e57849262000212575b5050600019600383901b1c191690861b1781555b8151938411620001fe5784548581811c91168015620001f3575b88821014620001df5783811162000197575b5086928411600114620001315783949596509262000125575b5050600019600383901b1c191690821b1790555b516118a09081620003108239f35b01519050388062000103565b9190601f1984169685845280842093905b8882106200017f575050838596971062000165575b505050811b01905562000117565b015160001960f88460031b161c1916905538808062000157565b80878596829496860151815501950193019062000142565b8582528782208480870160051c8201928a8810620001d5575b0160051c019086905b828110620001c9575050620000ea565b838155018690620001b9565b92508192620001b0565b634e487b7160e01b82526022600452602482fd5b90607f1690620000d8565b634e487b7160e01b81526041600452602490fd5b015190503880620000aa565b8480528a85208994509190601f198416865b8d8282106200026b575050841162000251575b505050811b018155620000be565b015160001960f88460031b161c1916905538808062000243565b8385015186558c9790950194938401930162000230565b9091508380528984208680850160051c8201928c8610620002cb575b918a91869594930160051c01915b828110620002bc57505062000094565b8681558594508a9101620002ac565b925081926200029e565b634e487b7160e01b83526022600452602483fd5b94607f16946200007d565b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040908082526004908136101561001757600080fd5b600091823560e01c91826301ffc9a7146110e85750816306fdde0314610fff578163081812fc14610f99578163095ea7b314610e485781630c49ccbe14610e0f57816312210e8a14610de257816313ead56214610d6e57816318160ddd14610d35578163219f5d1714610cf557816323b872dd14610cdd5781632f745c5914610c9a57816330adf81f146103035781633644e5151461030357816340d097c3146108fa57816342842e0e146108cb57816342966c681461089d57816349404b7c146108675781634aa4a4fc146103035781634f6ccce71461082d5781636352211e146107d257816370a08231146107395781637ac2ff7b146106f657816388316456146106af57816395d89b411461054457816399fbab88146104c3578163a22cb465146103bf578163b88d4fde14610308578163c45a015514610303578163c87b56dd1461029357508063df2ab5bb1461023d578063e985e9c5146101c05763fc6f78651461018657600080fd5b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd578151908082526020820152f35b80fd5b50903461023957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102395760ff816020936101fe611233565b61020661125b565b73ffffffffffffffffffffffffffffffffffffffff91821683526005875283832091168252855220549151911615158152f35b5080fd5b5060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd57610270611233565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036101bd5780f35b8284346102395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610239576102d16102ff9335611640565b508181516102de81611318565b528051916102eb83611318565b8252519182916020835260208301906111d5565b0390f35b6112de565b905082346103bb5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bb57610342611233565b61034a61125b565b60443591856064359567ffffffffffffffff87116102395736602388011215610239578601359561038661037d886113a4565b96519687611363565b868652366024888301011161023957866103b89760246020930183890137860101526103b38383836113de565b6116a1565b80f35b8280fd5b905082346103bb57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bb576103f8611233565b90602435918215158093036104bf5773ffffffffffffffffffffffffffffffffffffffff16928315610491575033845260056020528084208385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8360249251917f5b08ba18000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8284346102395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610239578161018092825192818452816020850152830152600160608301528060808301528060a08301528060c08301528060e0830152806101008301528061012083015280610140830152610160820152f35b8383346101bd57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd578151918160019283549384811c918186169586156106a5575b6020968785108114610679578899509688969785829a5291826000146106345750506001146105d9575b5050506102ff92916105ca910385611363565b519282849384528301906111d5565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061061c57505050820101816105ca6102ff6105b7565b8054848a018601528895508794909301928101610603565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b860190930193508492506105ca91506102ff90506105b7565b60248360228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b92607f169261058d565b82846101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023957816080928251928184528160208501528301526060820152f35b8260c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd57610729611233565b5060643560ff8116036101bd5780f35b8383346101bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd5773ffffffffffffffffffffffffffffffffffffffff610787611233565b169283156107a45750806020938392526003845220549051908152f35b9060249251917f89c62b64000000000000000000000000000000000000000000000000000000008352820152fd5b8383346101bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd575073ffffffffffffffffffffffffffffffffffffffff61082560209335611640565b915191168152f35b8284346102395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102395751908152602090f35b82847ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd5761089961125b565b5080f35b8260207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd5780f35b828434610239576103b8906108df3661127e565b919251926108ec84611318565b8584526103b38383836113de565b839150346103bb57602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610bb657610936611233565b906006547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92838214610c6e576001820160065582519061097682611318565b87825273ffffffffffffffffffffffffffffffffffffffff94858216958615610c3f57868591828c5260028b52878c2054168015159384610bf0575b50818c5260038b52878c2060018154019055828c5260028b52878c20827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c80a4610bc1573b610a27578680f35b85610a7d9184959697989451809381927f150b7a020000000000000000000000000000000000000000000000000000000096878452338c85015288602485015260448401526080606484015260848301906111d5565b038186895af1839181610b65575b50610aff5750503d15610af7573d610aa2816113a4565b90610aaf84519283611363565b81528091863d92013e5b80519485610af15750506024935051917f64a0ae92000000000000000000000000000000000000000000000000000000008352820152fd5b85925001fd5b506060610ab9565b7fffffffff00000000000000000000000000000000000000000000000000000000919296501603610b37575050508180808080808680f35b6024935051917f64a0ae92000000000000000000000000000000000000000000000000000000008352820152fd5b9091508781813d8311610bba575b610b7d8183611363565b81010312610bb657517fffffffff0000000000000000000000000000000000000000000000000000000081168103610bb6579088610a8b565b8380fd5b503d610b73565b602486898651917f73c6ac6e000000000000000000000000000000000000000000000000000000008352820152fd5b610c2984600052600460205260406000207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b818d5260038c52888d209081540190558c6109b2565b6024888b8851917f64a0ae92000000000000000000000000000000000000000000000000000000008352820152fd5b6024876011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b82843461023957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102395790602091610cd6611233565b5051908152f35b82346101bd576103b8610cef3661127e565b916113de565b828460c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023957606091815191818352816020840152820152f35b82843461023957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102395751908152602090f35b828460807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023957610da2611233565b50610dab61125b565b5060443562ffffff8116036102395760643573ffffffffffffffffffffffffffffffffffffffff8116036102395751908152602090f35b82807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd5780f35b505060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd578151908082526020820152f35b905082346103bb57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bb57610e81611233565b91602435610e8e81611640565b33151580610f79575b80610f44575b610f1557819073ffffffffffffffffffffffffffffffffffffffff809616958691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a484526020528220907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b83517fa9fbf51f0000000000000000000000000000000000000000000000000000000081523381850152602490fd5b5073ffffffffffffffffffffffffffffffffffffffff81168652600560205283862033875260205260ff848720541615610e9d565b503373ffffffffffffffffffffffffffffffffffffffff82161415610e97565b839150346103bb5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bb57816020938273ffffffffffffffffffffffffffffffffffffffff9335610ff081611640565b50825285522054169051908152f35b8383346101bd57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bd5781519181825492600184811c918186169586156110de575b6020968785108114610679578899509688969785829a529182600014610634575050600114611083575050506102ff92916105ca910385611363565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106110c657505050820101816105ca6102ff6105b7565b8054848a0186015288955087949093019281016110ad565b92607f1692611047565b9150346103bb5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103bb57357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103bb57602092507f80ac58cd0000000000000000000000000000000000000000000000000000000081149081156111ab575b8115611181575b5015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150148361117a565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150611173565b919082519283825260005b84811061121f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016111e0565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361125657565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361125657565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126112565773ffffffffffffffffffffffffffffffffffffffff90600435828116810361125657916024359081168103611256579060443590565b346112565760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261125657602060405160008152f35b6020810190811067ffffffffffffffff82111761133457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761133457604052565b67ffffffffffffffff811161133457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b909173ffffffffffffffffffffffffffffffffffffffff80931692831561160f57600092828452826020956002875260409684888820541696879133151580611547575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92846114d9575b858352600381528b83206001815401905586835252898120847fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580a4169283830361149f5750505050565b6064945051927f64283d7b000000000000000000000000000000000000000000000000000000008452600484015260248301526044820152fd5b61151287600052600460205260406000207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b848352600381528b83207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815401905561144e565b919394509150806115ce575b1561156357859291879138611422565b8786886115995760249151907f7e2732890000000000000000000000000000000000000000000000000000000082526004820152fd5b60449151907f177e802f0000000000000000000000000000000000000000000000000000000082523360048301526024820152fd5b5033871480156115f3575b806115535750858252600481523385898420541614611553565b5086825260058152878220338352815260ff88832054166115d9565b60246040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152fd5b80600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416908115611670575090565b602490604051907f7e2732890000000000000000000000000000000000000000000000000000000082526004820152fd5b813b6116ae575b50505050565b73ffffffffffffffffffffffffffffffffffffffff949192939480931693604051937f150b7a0200000000000000000000000000000000000000000000000000000000928386523360048701521660248501526044840152608060648401528261171e60209660848301906111d5565b039285816000958187895af1849181611812575b506117aa575050503d6000146117a2573d61174c816113a4565b9061175a6040519283611363565b81528091843d92013e5b8051928361179d57602483604051907f64a0ae920000000000000000000000000000000000000000000000000000000082526004820152fd5b019050fd5b506060611764565b9092507fffffffff0000000000000000000000000000000000000000000000000000000091945016036117e15750388080806116a8565b602490604051907f64a0ae920000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508681813d8311611863575b61182a8183611363565b810103126104bf57517fffffffff00000000000000000000000000000000000000000000000000000000811681036104bf579038611732565b503d61182056fea2646970667358221220794233e554c0e076b251a4d13b6e332aaae80fee077a1838b3634e48000b481f64736f6c63430008140033608080604052346100165761018b908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163059d8f971461011d5781639d025db61461007f575063a1e4dab11461004257600080fd5b3461007c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007c5760209054604051908152f35b80fd5b9050346101195760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101195760043573ffffffffffffffffffffffffffffffffffffffff811603610119576024358060020b03610119576044358060020b03610119576064356fffffffffffffffffffffffffffffffff8116036101195760843563ffffffff81160361011957602091548152f35b5080fd5b823461007c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261007c57600435815580f3fea2646970667358221220b49f8122bd28932c5729be00a5bed9b76c80c96e2f66dbdb3773fe76d5d275e064736f6c63430008140033a2646970667358221220f1d1f1e76bea904412e5f8c0d5dd429cfbe564bf7c593461ca759d8ce34d033264736f6c63430008140033",
    "sourceMap": "510:1992:61:-:0;;;;;;;1631:4:12;510:1992:61;;;;1631:4:12;510:1992:61;;;1631:4:12;510:1992:61;3231:4:15;510:1992:61;;;3231:4:15;510:1992:61;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "510:1992:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:26:12;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;658:22;510:1992;;;;;;;;;;;;;;;;;;;;;;2497:18:18;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:36;510:1992;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2345:18:18;510:1992:61;;;;:::i;:::-;1712:64:12;510:1992:61;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;2345:18:18;510:1992:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;;-1:-1:-1;510:1992:61;;;;;-1:-1:-1;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3286:18:18;510:1992:61;;;;:::i;:::-;;1712:64:12;510:1992:61;;1712:64:12;;;:::i;:::-;510:1992:61;;;3286:18:18;510:1992:61;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:18:18;510:1992:61;;;;:::i;:::-;1712:64:12;510:1992:61;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;2791:18:18;510:1992:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;;-1:-1:-1;510:1992:61;;;;;-1:-1:-1;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;1382:27;;;;;510:1992;;;;;1382:27;;1404:3;;;1382:27;;510:1992;1382:27;;510:1992;1616:14:13;;1382:27:61;;;;;;;;;;;;;;510:1992;;;;;;1419:12;510:1992;;1419:35;;;;;510:1992;;;;;;1419:35;;;;510:1992;1419:35;;;510:1992;1419:35;;510:1992;1419:35;;;;;;;;;;;510:1992;;;;1419:12;510:1992;;1616:14:13;1503:7:61;1616:14:13;510:1992:61;1464:54;;;;;510:1992;;1616:14:13;510:1992:61;;;;1464:54;;;;;510:1992;1464:54;;510:1992;1464:54;;510:1992;1616:14:13;;;;510:1992:61;1464:54;;;;;;;;;;;510:1992;;;;1528:11;510:1992;;1528:32;;;;;510:1992;;;;;;1528:32;;;;510:1992;1528:32;;1555:4;510:1992;1528:32;;1712:64:12;1528:32:61;;;;;;;;;;;510:1992;1616:14:13;;;1503:7:61;1616:14:13;510:1992:61;1570:15;;;;;510:1992;;;;;;1570:15;;;;510:1992;1570:15;;;510:1992;1570:15;;1712:64:12;1570:15:61;;;;;;;;;;;510:1992;;;;1596:8;510:1992;;1616:14:13;1503:7:61;1616:14:13;510:1992:61;;;;1596:39;510:1992;1596:39;;510:1992;1596:39;;510:1992;1631:3;510:1992;;;1712:64:12;1616:14:13;;;;1596:39:61;;;;;;;;;;;510:1992;1616:14:13;;;1503:7:61;1616:14:13;510:1992:61;1645:16;;;;;510:1992;;;;;;1645:16;;;;510:1992;1645:16;;;510:1992;1645:16;;1712:64:12;1645:16:61;;;;;;;;510:1992;;;;;;1596:8;510:1992;;;;1681:32;;;;510:1992;1681:32;;;510:1992;1681:32;;510:1992;1681:32;;;;;;;;;;510:1992;1672:45;;;;:::i;:::-;510:1992;;1419:12;510:1992;;;;1736:23;;;;510:1992;1736:23;;;510:1992;1736:23;;1712:64:12;1736:23:61;;;;;;;;;;;510:1992;;;3792:6:12;;;;3788:217;;510:1992:61;;;3788:217:12;3820:44;510:1992:61;;;;;;;;;;;;;;;;;;;;;3820:44:12;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:34:12;;;;;;;;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3938:34:12;;;;;:::i;:::-;3788:217;;;510:1992:61;;;1736:23;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;510:1992;;;;;;;;;1681:32;;;;;;;;;;;;;;;:::i;:::-;;;1616:14:13;;;;1672:45:61;1616:14:13;;1681:32:61;;1616:14:13;510:1992:61;;;1681:32;;;;;;510:1992;;;;;;;;;1645:16;;;;:::i;:::-;510:1992;;1645:16;;;;510:1992;;;;1645:16;510:1992;;;;;;;;;1645:16;510:1992;;;1596:39;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1570:15;;;;:::i;:::-;510:1992;;1570:15;;;;510:1992;;;;1570:15;510:1992;;;;;;;;;1570:15;510:1992;;;1528:32;;;;:::i;:::-;510:1992;;1528:32;;;;1464:54;;;;:::i;:::-;510:1992;;1464:54;;;;1419:35;;;;:::i;:::-;510:1992;;1419:35;;;;1382:27;;;;:::i;:::-;510:1992;;1382:27;;;;;510:1992;;;;;;;;;;;;;;;;;;;;;2971:26:18;510:1992:61;;;;:::i;:::-;;1712:64:12;510:1992:61;;1712:64:12;;;:::i;:::-;510:1992:61;;;2971:26:18;510:1992:61;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:25;510:1992;;;;;;;;;;;;;;;;;;;;;;3130:18:18;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3431:16:18;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:27;;;;;510:1992;;;1831:27;;;1853:3;510:1992;1831:27;;510:1992;1616:14:13;1831:27:61;;;;;;;;;;;;;;;;;;510:1992;;;;;;1868:12;510:1992;;1868:35;;;;;510:1992;;;;;;1868:35;;;;510:1992;1868:35;;1853:3;510:1992;1868:35;;510:1992;1868:35;;;;;;;;;;;510:1992;;;;1868:12;510:1992;;1616:14:13;1952:7:61;1616:14:13;510:1992:61;1913:54;;;;;510:1992;;1616:14:13;510:1992:61;;;;1913:54;;;;;510:1992;1913:54;;510:1992;1913:54;;510:1992;1853:3;1616:14:13;;;510:1992:61;1913:54;;;;;;;;;;;510:1992;;;;1977:11;510:1992;;1977:32;;;;;;510:1992;;;;;;;;1977:32;;;;2004:4;510:1992;1977:32;;1712:64:12;1977:32:61;;;;;;;;;;;510:1992;1616:14:13;;;1952:7:61;1616:14:13;510:1992:61;2019:15;;;;;510:1992;;;;;;2019:15;;;;510:1992;2019:15;;;510:1992;2019:15;;1712:64:12;2019:15:61;;;;;;;;;;;510:1992;2045:27;;;;;;;510:1992;;;;;;;2045:27;;;;;;;2067:3;510:1992;2045:27;;510:1992;2045:27;;;;;;;;;;;510:1992;;;;2082:8;510:1992;;2082:32;;;;;;510:1992;;2082:32;510:1992;2082:32;;2067:3;510:1992;2082:32;;510:1992;2110:3;;1616:14:13;2110:3:61;;;510:1992;;;;;1712:64:12;2082:32:61;;;;;;;;;;;510:1992;;;2082:8;510:1992;;1616:14:13;1952:7:61;1616:14:13;510:1992:61;;;;2124:39;510:1992;2124:39;;510:1992;2124:39;;510:1992;;;;1712:64:12;1616:14:13;;;;2124:39:61;;;;;;;;;;;510:1992;;;1977:11;510:1992;;2173:31;;;;;;510:1992;;;;;;;2173:31;;;;;;;2200:3;510:1992;2173:31;;1712:64:12;2173:31:61;;;;;;;;510:1992;1616:14:13;;1952:7:61;1616:14:13;510:1992:61;2214:20;;;;;510:1992;;;;;;2214:20;;;;510:1992;2214:20;;;510:1992;2214:20;;1712:64:12;2214:20:61;;;;;;;;510:1992;;;;;;2082:8;510:1992;;;;2254:32;;;;510:1992;2254:32;;2067:3;510:1992;2254:32;;510:1992;2254:32;;;;;;;;;;510:1992;2245:45;;;;:::i;:::-;510:1992;;1868:12;510:1992;;;;2309:23;;;;510:1992;2309:23;;;510:1992;2309:23;;1712:64:12;2309:23:61;;;;;;;;;;;510:1992;;;3792:6:12;2067:3:61;3792:6:12;;3788:217;;510:1992:61;;;3788:217:12;3820:44;510:1992:61;;;;;;;;;;;;;;;;;;;;;3820:44:12;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:34:12;;;;;;;;510:1992:61;;;;;;;2067:3;510:1992;;;;;;;;;;;;;;;;;;;;;;3938:34:12;;;;;:::i;:::-;3788:217;;510:1992:61;;;2309:23;;;;;;;;;;;;;;:::i;:::-;;;;2254:32;;;;;;;;;;;;;;;:::i;:::-;;;1616:14:13;;;;2245:45:61;1616:14:13;;2254:32:61;;;;;;;2214:20;;;;:::i;:::-;510:1992;;2214:20;;;;2173:31;;;;:::i;:::-;510:1992;;2173:31;;;;2124:39;;;;;;;;;;;;;:::i;:::-;;;;;2082:32;;;;;;;:::i;:::-;510:1992;;2082:32;;;;;2045:27;;;;:::i;:::-;510:1992;;2045:27;;;;510:1992;;;;;2045:27;510:1992;;;2019:15;;;;:::i;:::-;510:1992;;2019:15;;;;;510:1992;;;;;;;;;2019:15;510:1992;;;1977:32;;;;:::i;:::-;510:1992;;1977:32;;;;1913:54;;;;:::i;:::-;510:1992;;1913:54;;;;1868:35;;;;:::i;:::-;510:1992;;1868:35;;;;1831:27;;;;:::i;:::-;510:1992;;1831:27;;;;;510:1992;;;;;;;;;;;;;;3589:19:18;510:1992:61;;;;;:::i;:::-;1712:64:12;510:1992:61;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;3589:19:18;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;;;;;;;;:::i;:::-;;1712:64:12;510:1992:61;;1712:64:12;;;:::i;:::-;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:1992:61;;;;;;-1:-1:-1;;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:1992:61;;-1:-1:-1;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:34;510:1992;;;;;;;;;;;;;;;;;;;;;;2643:16:18;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:27;;;;;510:1992;;;1007:27;;510:1992;1007:27;;1029:3;510:1992;1007:27;;510:1992;1616:14:13;;1007:27:61;;;;;;;;;;;510:1992;;;;;;1044:12;510:1992;;1044:35;;;;;510:1992;;;;;;1044:35;;;;510:1992;1044:35;;1029:3;510:1992;1044:35;;510:1992;1044:35;;;;;;;;510:1992;;;1044:12;510:1992;;1616:14:13;1128:7:61;1616:14:13;510:1992:61;1089:54;;;;;510:1992;;1616:14:13;510:1992:61;;;;1089:54;;;;;510:1992;1089:54;;510:1992;1089:54;;510:1992;1029:3;1616:14:13;;;510:1992:61;1089:54;;;;;;;;510:1992;;;1154:11;510:1992;;1154:32;;;;;510:1992;;;;;;1154:32;;;;510:1992;1154:32;;1181:4;510:1992;1154:32;;1712:64:12;1154:32:61;;;;;;;;510:1992;1616:14:13;;1128:7:61;1616:14:13;510:1992:61;1196:15;;;;;510:1992;;;;;;1196:15;;;;510:1992;1196:15;;;510:1992;1196:15;;1712:64:12;1196:15:61;;;;;;;;510:1992;;;;1231:8;510:1992;;;;;1231:32;;510:1992;1231:32;;1029:3;510:1992;1231:32;;510:1992;1616:14:13;;;1231:32:61;;;;;;;;;;;;;;510:1992;1265:3;;5423:6:12;;;5419:208;;510:1992:61;;;;;1044:12;510:1992;;;;1288:23;;;;510:1992;1288:23;;;510:1992;1288:23;;1712:64:12;1288:23:61;;;;;;;;;;;510:1992;1616:14:13;;1128:7:61;1616:14:13;510:1992:61;;;3792:6:12;;;;3788:217;;510:1992:61;;;1288:23;;;;;;;;;;;;;;;:::i;:::-;;;;;5419:208:12;5451:41;510:1992:61;;;;;;;;;;;;;;;;;;;;;5451:41:12;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:64:12;5512:31;;;;;;;;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:64:12;5563:31;;;;;:::i;:::-;5419:208;;;;1231:32:61;;;;;;;;;;;;;;;;:::i;:::-;;;1616:14:13;;;;;1231:32:61;;;;;;;;1196:15;;;;:::i;:::-;510:1992;;1196:15;;;;1154:32;;;;:::i;:::-;510:1992;;1154:32;;;;1089:54;;;;:::i;:::-;510:1992;;1089:54;;;;1044:35;;;;:::i;:::-;510:1992;;1044:35;;;;1007:27;;;;:::i;:::-;;;;510:1992;;;;;;;;;;;;;732:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:1992;;;;;;;721:24;510:1992;;;721:24;510:1992;;;770:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:1992;;;755:37;510:1992;;;755:37;510:1992;;;817:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:1992;;;;;803:35;510:1992;;;803:35;510:1992;;721:24;510:1992;;;;755:37;510:1992;;;;858:98;;;;;;;;;;;;;;;;;;;510:1992;858:98;;;;;510:1992;;;;;;;;;;;;;;;858:98;;;;;;;;;510:1992;;848:108;510:1992;;;848:108;510:1992;;;858:98;1712:64:12;;;;;;510:1992:61;1712:64:12;;817:21:61;1712:64:12;;;;;;510:1992:61;1712:64:12;;732:13:61;1712:64:12;;;;;;510:1992:61;1712:64:12;;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;510:1992:61;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1712:64:12;;;;;;;;:::o;:::-;;;;;;;;;;;510:1992:61;1712:64:12;;;;;;;;;;;510:1992:61;1712:64:12;:::o;:::-;;510:1992:61;;1712:64:12;510:1992:61;;1712:64:12;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;510:1992:61;;;1712:64:12;;510:1992:61;;;;;1712:64:12;;;:::i;:::-;;;;-1:-1:-1;1712:64:12;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;510:1992:61;;;1712:64:12;;;;;:::o;1865:600::-;1920:7;510:1992:61;;;;;;;;;1920:7:12;510:1992:61;;;;1944:14:12;:::o;1916:542::-;-1:-1:-1;3025:106:12;;;2031:382;;2427:19;;:::o;2031:382::-;510:1992:61;;2251:43:12;;;510:1992:61;;;;1712:64:12;510:1992:61;1712:64:12;;;510:1992:61;2251:43:12;;510:1992:61;1712:64:12;;;;;;;;;;;;;2139:178;;1712:64;;;;;;;510:1992:61;1712:64:12;2139:178;;;510:1992:61;;;;1712:64:12;510:1992:61;;1712:64:12;;;;;;;:::i;:::-;;;2139:178;;;;;;;;;:::i;:::-;2099:237;;;;;2370:27;2099:237;;:::i;:::-;2251:43;510:1992:61;;;2370:27:12;;;;;;:::i;:::-;2427:19;:::o;510:1992:61:-;;;;;;;;;;;:::o;1616:14:13:-;;;;;;;;;;510:1992:61;;;1616:14:13;;;;;:::o;2473:443:12:-;3025:106;;;2517:367;;2473:443;510:1992:61;;;2894:14:12;510:1992:61;;;2894:14:12;510:1992:61;2473:443:12:o;2517:367::-;510:1992:61;;2721:67:12;;;;510:1992:61;;;;1712:64:12;510:1992:61;;;1712:64:12;2781:4;510:1992:61;;;1712:64:12;510:1992:61;2721:67:12;;510:1992:61;1712:64:12;;;;;;;;;;;;-1:-1:-1;1712:64:12;2608:199;;1712:64;;;;510:1992:61;1712:64:12;2608:199;;;510:1992:61;;;;1712:64:12;510:1992:61;;1712:64:12;;;;;;;:::i;2608:199::-;2572:250;;;;;;;:::i;:::-;;2517:367;;;5365:269;5423:6;5419:208;;5365:269;:::o;5419:208::-;510:1992:61;;5451:41:12;510:1992:61;;;;;;;;;;;;;;;;;;;;;5451:41:12;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:64:12;5512:31;;;;;;;;510:1992:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:64:12;5563:31;;;;;:::i;:::-;5365:269::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "ghoToken()": "5996db91",
    "lpCollection()": "bf2e848c",
    "lpMoney()": "ea846d13",
    "priceOracle()": "2630c12f",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_close()": "70355592",
    "test_liqudation()": "3a61420c",
    "test_mint()": "1e2fc4f7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ghoToken\",\"outputs\":[{\"internalType\":\"contract IGhoToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpCollection\",\"outputs\":[{\"internalType\":\"contract LpCollectionMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpMoney\",\"outputs\":[{\"internalType\":\"contract LPMoney\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract PriceOracleMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_liqudation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LPMoney.t.sol\":\"LPMoneyTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin-latest/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v2-periphery/=lib/v2-periphery/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/bunni-oracle/lib/v3-periphery/\",\":bunni-oracle/=lib/bunni-oracle/\",\":bunni/=lib/bunni-oracle/lib/bunni/\",\":create3-factory/=lib/bunni-oracle/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":v2-core/=lib/bunni-oracle/lib/bunni/lib/v2-core/contracts/\",\":v2-periphery/=lib/bunni-oracle/lib/bunni/lib/v2-periphery/contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x211a77d98af9c4c686f7f6365d9e545ea6253be910232c36be7758d3bc99bdff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce417bd13b8b7d49c7ddda765392c2117b39f5a04bd56bbf47d65cdcd1af1bac\",\"dweb:/ipfs/QmbU2vFrffABYuCB9s9vckfaLiwXu4diTRSBf6YB1LXth2\"]},\"lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x91e76dac5eaf2f0a98eac61484302b1292b0d3998bd80d3a19007e45600de246\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9302006b87042d5dd6b507aa360e99b905adaee276652ea772ae78329e72a76c\",\"dweb:/ipfs/QmWbvEcZY2nK5MtZ5sPYXjHppkMoUFTFHqYetkHXmLkNSc\"]},\"lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x23bb9671c6188fe826d384acb88182efc75c55ee7b6e7c5792de8f26581f0390\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://eb0b086015acc6d97e15e71a406e5ba393d188df878c71eaeb98b6ce4c99a353\",\"dweb:/ipfs/QmWvXDAjebKmEJcvoB7S7e981zcvLvMLT11BLZZMf7D2rL\"]},\"lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x8e0cdb6280728619c44a8220996512b81e85f6fa7bc5373db742ea953a81eda8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f0748123e32874d0e1e405a463fafcf98f686fac0055da2e13bfdaa0db917766\",\"dweb:/ipfs/QmRZPF69X1e6T3yT2z8HTgzEtXHTVScqzoEMbfvp5Niggq\"]},\"lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0x8229e43304f2c2412aaca27ea314ee78f3bcaca31124017b3bc4729c383594f1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3beed69fd04dd1ad59e9c083914ca47fd1f3c0bf53e50a62c772597a25191d78\",\"dweb:/ipfs/QmZ7vuCn86Gg6kopXVw5hBRPemcqtWykke8zUskZArq8aP\"]},\"lib/bunni-oracle/lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x160a4210c9bec777435f7c7a2f877f9dc3cf75554b7587bdf0d624faf1df38f5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d7fa52e42bc37af103917ea4c8965acb488a960ed98004e34cf53ca081409fc8\",\"dweb:/ipfs/QmXRSy9nMQeE9bUGzMqkdBN5vdeDqn5NVMABbfSa9wat2N\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xe079be3c1dbbbcd057bfecfafef4c0388a9349e9000f9d8303419668e1385096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e410506855b381679484049fa69e0a1a3224e530714bca5a770865c414bc13\",\"dweb:/ipfs/QmTPLzVEfwPcMsWyFQ4GDaHiRp5S1uA5CNHigHkdjP7vye\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x7893f3bde65ba1d00f78704b16b560a14193bc70476f4d5d165f27512896bc5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58823fca486c54f7af8ec764ed4d6da081e9546576ae32049baccd9cc8cd52ef\",\"dweb:/ipfs/Qme3YFQvBYv8NbuTmqEGFHhtqVPjEWRADSrGKeaGzzhRM3\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x540fc377956da55b8040a8b61df2af559ea12eab0d609e68628fe43927ac0efe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://197062dbe6ddd6d38b96a668e1a635c509493b74502548f0b44a10b7e9194358\",\"dweb:/ipfs/QmVW7jG1T58W2Y9idzLFSqtkRp2dZCNViFkTujWiFomafZ\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfa021efd8322b71e01392ba8ac97873f3090225b5643d73f2b848729a1f549cc\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://2e8b934af4e296691cd23283f5e81709e256b674df6fad08e320dfeeab0ee1f9\",\"dweb:/ipfs/QmP82Juwrbo3JCZPprKsWTBdaJGLBM3638uvud94bsDEVn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0x3b123e4c98a660bd6f3c45f38a5dd49af3d63d3bb8d74632b5f3f9a436600632\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9453004b7069dfcbbccc6ae32d94c900a0e1efe9fd8dc657e38480ea7483a09c\",\"dweb:/ipfs/QmaJsKTHJz5Yt72YqTB28zB1Bo5ffpUuuhd7DCs25yodpa\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x03129910eb628d555f3c71cc9beffcb53a261f6338921dd562cf5d42fde1651c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5f5cb5f3278bb677c57a39c040ea99d62be831b9e00aa1886c63e835dafabc\",\"dweb:/ipfs/Qma7Kq9ikbhuNbZYer8D9Q5ywNbKaB7JzapQLcp6vx4QiF\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x14b9ea8699b0b5dec9520ced4da0807d053375c35f2530625a2745c23b7654af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97fc37af81eff2dc7f6b30cd3b51df0b9720a46bb961748434ee2c3643488569\",\"dweb:/ipfs/QmcMyGPigsnsjJGaLa3pDWyBeK118HuoVHY3JkiERCr5Ce\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xba8fd289804edaa5aa95ad42f565251de5cef1f3c6a2418b22546d94de9e89c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b60acaa81bdf58dcd61131cf0a3ee5eed25eece34a9ba972f02af821314679ea\",\"dweb:/ipfs/Qmdm6Af7wZU9s1oFPPV3eXxRebyCHL3VeyevhsQZ2eRD3R\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xc290092fcf0ab4513863ab8bf9e335020d296018f6ef5ee1acc5b0213b3aa00a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19de29536b48c1ac3f45705a3fccf2bfab999e46428b5825247c11c228610a9b\",\"dweb:/ipfs/Qmf8cUC2oUzdDwFGnxjMzCWGZV7Q4DQXuVgPb9DCAZRxyf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xdc7f246f7c06b955e1ab46c85509e2b323ba490afde6e9d47bb152313069ab76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd6c14f6bcacb0f0620a1a370a26e2b31732d2da6e564e35632a61d6910ff14d\",\"dweb:/ipfs/QmSLoRSi9A9qiV5Pq82En4DWtDb34LhoPE4fu2dJPwSnht\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xe725c163dd1ee87f64e050ac85dadf0def413086e442c455c8f4080d53a1dd65\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c598dc23f6de668a9a65ff7f08bad0fb38775c1030e5500d1c6aa8d2eb557ce8\",\"dweb:/ipfs/QmNiCa8tYRytknrM2T3sntUyfxapkuJYZAYvyaTfhRMS3D\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5\",\"dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x388533862fc3bc4a7040ec401ec473019a7907bf397b406defee94286c1d6c7e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e6ab09700c39f53d429f430ad3b4b7cd2a3b2d61baa53004dd1f4fd92db39e36\",\"dweb:/ipfs/QmSUnTzyZtZ4K6ASxwxdzCCMwj7utj8xzDYnjopGPCV4z5\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da\",\"dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x9e84507ff95f4247bfc737381f628ae84b78b3c9d6717fd2abec778690a18504\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f0d36a524a4d551865a2598ae2a7620e5b916fd781c8e08bbc880606c0abe4\",\"dweb:/ipfs/QmNqaGVukhKWDJLoBT8HyFtoJLUYuhh4LAvCTYxcXs1r34\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x03475f5abd020eeb153c2144c7dfe53f33a32e8bc1371b865d44da1009b2b468\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e462f711f5b07fcfa68ca4207b0f7bd9065cd8d981a84114092e24feaf6310ba\",\"dweb:/ipfs/QmacKxzKjndag6RNXuHdDvbXCLzfRu27stPnBqFHDDbYqB\"]},\"src/LPMoney.sol\":{\"keccak256\":\"0xaa9ab100800db41033b6082467eaeb67a0c3ab7b489ca4b280d4a0d576b2440f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://027d9f3ed9d14cbe138ac9709c2e2f1c19c5de79dc0470405c67ba29cee79477\",\"dweb:/ipfs/QmXwVBDBAhg97Wja6eGm75CZbJHChN2SC4wzT1k7aVVpW3\"]},\"src/interfaces/IGhoToken.sol\":{\"keccak256\":\"0x8216150c2d26981b7ea99af589592495bdd815d43e4059293222579df8feadb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d30c8ff709dc8b2121757d72c5f6f52d85259b2cb2a2929f87a40af7d67c24fa\",\"dweb:/ipfs/QmUk8zcJKeUbrLfG99y6nyiX6Y3DNuTpp9f7ccciMqeKEM\"]},\"src/interfaces/ILPpriceOracle.sol\":{\"keccak256\":\"0x1c1ee7a541bbe671eea46e048be8b245b1af7300a5f788852467a3a2a61d5234\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8725fda5cf6754aaa9619b3c4bc33218585a87a3822518fd977d8e4694ca24db\",\"dweb:/ipfs/QmdF998ega2GzciGLksH6sqNbLMLdKE9X9NurBbkc5MYsm\"]},\"test/LPMoney.t.sol\":{\"keccak256\":\"0xa224e38a85d73ab3b98dad7acce720fd9cc908f4482503b65a553f7acc704358\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3a7d8b68afa12c137a8c5d90720f1f9c4b9ef8abea3b6f01f873ec0b9e271635\",\"dweb:/ipfs/QmcTnWTgYSgWBCUR9FxZquxug5whRb2qywJEJUwwbaj3Kc\"]},\"test/mocks/GhoMock.sol\":{\"keccak256\":\"0x455cccf9313214b8e7dc16112a1a4317d9f59773883f5dbd47414353020b0bbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd849746b520c55adbc467d5b02a0471e098e12d8e8d3933c2222a1d07810f53\",\"dweb:/ipfs/Qmap7FQQSfvjRR2Wz3UcYRZQqnf9h4S92LTCzzmqak7VTo\"]},\"test/mocks/LpCollectionMock.sol\":{\"keccak256\":\"0xc3e0f26d0bab928dcbf6bc6464a971ebaa21c9e88de84a0f0ce7f296f89f1cf6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://315ed32c48ec0d4dfb5ded1e555f91e141ea5e6f72a73a5dc0e5e39818db378f\",\"dweb:/ipfs/QmWZhc3a6aDyPzojGY4RsFJE2yx9K444RLu85pCWxSH3KE\"]},\"test/mocks/PriceOracleMock.sol\":{\"keccak256\":\"0x155bb568c70cb380059fbfac0f408fab7337cef0865d88d41dc880fa24556039\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a1a8e954440b7543c8908e96511fb3cb89ebcadef65fc278e572878c23df2fe\",\"dweb:/ipfs/QmdKU3WNv5AYCd5eVVLAVnKjS3VpWJaRWuLnSdajxkKk12\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ghoToken",
          "outputs": [
            {
              "internalType": "contract IGhoToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lpCollection",
          "outputs": [
            {
              "internalType": "contract LpCollectionMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lpMoney",
          "outputs": [
            {
              "internalType": "contract LPMoney",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceOracle",
          "outputs": [
            {
              "internalType": "contract PriceOracleMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_close"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_liqudation"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_mint"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-latest/=lib/openzeppelin-contracts/",
        "@openzeppelin/=lib/bunni-oracle/lib/bunni/lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v2-core/=lib/v2-core/",
        "@uniswap/v2-periphery/=lib/v2-periphery/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/bunni-oracle/lib/v3-periphery/",
        "bunni-oracle/=lib/bunni-oracle/",
        "bunni/=lib/bunni-oracle/lib/bunni/",
        "create3-factory/=lib/bunni-oracle/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/solmate/src/",
        "v2-core/=lib/bunni-oracle/lib/bunni/lib/v2-core/contracts/",
        "v2-periphery/=lib/bunni-oracle/lib/bunni/lib/v2-periphery/contracts/",
        "v3-core/=lib/v3-core/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LPMoney.t.sol": "LPMoneyTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IERC721Permit.sol": {
        "keccak256": "0x211a77d98af9c4c686f7f6365d9e545ea6253be910232c36be7758d3bc99bdff",
        "urls": [
          "bzz-raw://ce417bd13b8b7d49c7ddda765392c2117b39f5a04bd56bbf47d65cdcd1af1bac",
          "dweb:/ipfs/QmbU2vFrffABYuCB9s9vckfaLiwXu4diTRSBf6YB1LXth2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol": {
        "keccak256": "0x91e76dac5eaf2f0a98eac61484302b1292b0d3998bd80d3a19007e45600de246",
        "urls": [
          "bzz-raw://9302006b87042d5dd6b507aa360e99b905adaee276652ea772ae78329e72a76c",
          "dweb:/ipfs/QmWbvEcZY2nK5MtZ5sPYXjHppkMoUFTFHqYetkHXmLkNSc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "keccak256": "0x23bb9671c6188fe826d384acb88182efc75c55ee7b6e7c5792de8f26581f0390",
        "urls": [
          "bzz-raw://eb0b086015acc6d97e15e71a406e5ba393d188df878c71eaeb98b6ce4c99a353",
          "dweb:/ipfs/QmWvXDAjebKmEJcvoB7S7e981zcvLvMLT11BLZZMf7D2rL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0x8e0cdb6280728619c44a8220996512b81e85f6fa7bc5373db742ea953a81eda8",
        "urls": [
          "bzz-raw://f0748123e32874d0e1e405a463fafcf98f686fac0055da2e13bfdaa0db917766",
          "dweb:/ipfs/QmRZPF69X1e6T3yT2z8HTgzEtXHTVScqzoEMbfvp5Niggq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/IPoolInitializer.sol": {
        "keccak256": "0x8229e43304f2c2412aaca27ea314ee78f3bcaca31124017b3bc4729c383594f1",
        "urls": [
          "bzz-raw://3beed69fd04dd1ad59e9c083914ca47fd1f3c0bf53e50a62c772597a25191d78",
          "dweb:/ipfs/QmZ7vuCn86Gg6kopXVw5hBRPemcqtWykke8zUskZArq8aP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/bunni-oracle/lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0x160a4210c9bec777435f7c7a2f877f9dc3cf75554b7587bdf0d624faf1df38f5",
        "urls": [
          "bzz-raw://d7fa52e42bc37af103917ea4c8965acb488a960ed98004e34cf53ca081409fc8",
          "dweb:/ipfs/QmXRSy9nMQeE9bUGzMqkdBN5vdeDqn5NVMABbfSa9wat2N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xe079be3c1dbbbcd057bfecfafef4c0388a9349e9000f9d8303419668e1385096",
        "urls": [
          "bzz-raw://46e410506855b381679484049fa69e0a1a3224e530714bca5a770865c414bc13",
          "dweb:/ipfs/QmTPLzVEfwPcMsWyFQ4GDaHiRp5S1uA5CNHigHkdjP7vye"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x7893f3bde65ba1d00f78704b16b560a14193bc70476f4d5d165f27512896bc5b",
        "urls": [
          "bzz-raw://58823fca486c54f7af8ec764ed4d6da081e9546576ae32049baccd9cc8cd52ef",
          "dweb:/ipfs/Qme3YFQvBYv8NbuTmqEGFHhtqVPjEWRADSrGKeaGzzhRM3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x540fc377956da55b8040a8b61df2af559ea12eab0d609e68628fe43927ac0efe",
        "urls": [
          "bzz-raw://197062dbe6ddd6d38b96a668e1a635c509493b74502548f0b44a10b7e9194358",
          "dweb:/ipfs/QmVW7jG1T58W2Y9idzLFSqtkRp2dZCNViFkTujWiFomafZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfa021efd8322b71e01392ba8ac97873f3090225b5643d73f2b848729a1f549cc",
        "urls": [
          "bzz-raw://2e8b934af4e296691cd23283f5e81709e256b674df6fad08e320dfeeab0ee1f9",
          "dweb:/ipfs/QmP82Juwrbo3JCZPprKsWTBdaJGLBM3638uvud94bsDEVn"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0x3b123e4c98a660bd6f3c45f38a5dd49af3d63d3bb8d74632b5f3f9a436600632",
        "urls": [
          "bzz-raw://9453004b7069dfcbbccc6ae32d94c900a0e1efe9fd8dc657e38480ea7483a09c",
          "dweb:/ipfs/QmaJsKTHJz5Yt72YqTB28zB1Bo5ffpUuuhd7DCs25yodpa"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0x03129910eb628d555f3c71cc9beffcb53a261f6338921dd562cf5d42fde1651c",
        "urls": [
          "bzz-raw://ea5f5cb5f3278bb677c57a39c040ea99d62be831b9e00aa1886c63e835dafabc",
          "dweb:/ipfs/Qma7Kq9ikbhuNbZYer8D9Q5ywNbKaB7JzapQLcp6vx4QiF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x14b9ea8699b0b5dec9520ced4da0807d053375c35f2530625a2745c23b7654af",
        "urls": [
          "bzz-raw://97fc37af81eff2dc7f6b30cd3b51df0b9720a46bb961748434ee2c3643488569",
          "dweb:/ipfs/QmcMyGPigsnsjJGaLa3pDWyBeK118HuoVHY3JkiERCr5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348",
        "urls": [
          "bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0",
          "dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d",
        "urls": [
          "bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b",
          "dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50",
        "urls": [
          "bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af",
          "dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3",
        "urls": [
          "bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204",
          "dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0xba8fd289804edaa5aa95ad42f565251de5cef1f3c6a2418b22546d94de9e89c3",
        "urls": [
          "bzz-raw://b60acaa81bdf58dcd61131cf0a3ee5eed25eece34a9ba972f02af821314679ea",
          "dweb:/ipfs/Qmdm6Af7wZU9s1oFPPV3eXxRebyCHL3VeyevhsQZ2eRD3R"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b",
        "urls": [
          "bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6",
          "dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc",
        "urls": [
          "bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137",
          "dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728",
        "urls": [
          "bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd",
          "dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c",
        "urls": [
          "bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04",
          "dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xc290092fcf0ab4513863ab8bf9e335020d296018f6ef5ee1acc5b0213b3aa00a",
        "urls": [
          "bzz-raw://19de29536b48c1ac3f45705a3fccf2bfab999e46428b5825247c11c228610a9b",
          "dweb:/ipfs/Qmf8cUC2oUzdDwFGnxjMzCWGZV7Q4DQXuVgPb9DCAZRxyf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43",
        "urls": [
          "bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de",
          "dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0xdc7f246f7c06b955e1ab46c85509e2b323ba490afde6e9d47bb152313069ab76",
        "urls": [
          "bzz-raw://dd6c14f6bcacb0f0620a1a370a26e2b31732d2da6e564e35632a61d6910ff14d",
          "dweb:/ipfs/QmSLoRSi9A9qiV5Pq82En4DWtDb34LhoPE4fu2dJPwSnht"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b",
        "urls": [
          "bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26",
          "dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92",
        "urls": [
          "bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368",
          "dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39",
        "urls": [
          "bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97",
          "dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d",
        "urls": [
          "bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9",
          "dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02",
        "urls": [
          "bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063",
          "dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb",
        "urls": [
          "bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf",
          "dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xe725c163dd1ee87f64e050ac85dadf0def413086e442c455c8f4080d53a1dd65",
        "urls": [
          "bzz-raw://c598dc23f6de668a9a65ff7f08bad0fb38775c1030e5500d1c6aa8d2eb557ce8",
          "dweb:/ipfs/QmNiCa8tYRytknrM2T3sntUyfxapkuJYZAYvyaTfhRMS3D"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0xc0bbb3ed984dff71351269a84eb6e8e05b80fa82f8db633d3c79cce902b10062",
        "urls": [
          "bzz-raw://1203ca3fd412d00b180941863d57ac4fb7d87612af5cd130f5f7fad4a9434be5",
          "dweb:/ipfs/QmZxjkYTmDqmyJvTBdAkens6MpoXJ4CHuvhKe5UtYawKBV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0x388533862fc3bc4a7040ec401ec473019a7907bf397b406defee94286c1d6c7e",
        "urls": [
          "bzz-raw://e6ab09700c39f53d429f430ad3b4b7cd2a3b2d61baa53004dd1f4fd92db39e36",
          "dweb:/ipfs/QmSUnTzyZtZ4K6ASxwxdzCCMwj7utj8xzDYnjopGPCV4z5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2",
        "urls": [
          "bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f",
          "dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0x4c110f8100d8bdd61abfa008dc37dc5f98c12b5b25222ac8ac8bf99ced935300",
        "urls": [
          "bzz-raw://ef3fd138626582293a67630e3aeb17065bcc04fb018255ff89c459a81e3bd8da",
          "dweb:/ipfs/QmV7q5EoCzNJsZGkozzb55b1iM6F1kinSKrYdARf2ZkCGb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x9e84507ff95f4247bfc737381f628ae84b78b3c9d6717fd2abec778690a18504",
        "urls": [
          "bzz-raw://19f0d36a524a4d551865a2598ae2a7620e5b916fd781c8e08bbc880606c0abe4",
          "dweb:/ipfs/QmNqaGVukhKWDJLoBT8HyFtoJLUYuhh4LAvCTYxcXs1r34"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x03475f5abd020eeb153c2144c7dfe53f33a32e8bc1371b865d44da1009b2b468",
        "urls": [
          "bzz-raw://e462f711f5b07fcfa68ca4207b0f7bd9065cd8d981a84114092e24feaf6310ba",
          "dweb:/ipfs/QmacKxzKjndag6RNXuHdDvbXCLzfRu27stPnBqFHDDbYqB"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/LPMoney.sol": {
        "keccak256": "0xaa9ab100800db41033b6082467eaeb67a0c3ab7b489ca4b280d4a0d576b2440f",
        "urls": [
          "bzz-raw://027d9f3ed9d14cbe138ac9709c2e2f1c19c5de79dc0470405c67ba29cee79477",
          "dweb:/ipfs/QmXwVBDBAhg97Wja6eGm75CZbJHChN2SC4wzT1k7aVVpW3"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IGhoToken.sol": {
        "keccak256": "0x8216150c2d26981b7ea99af589592495bdd815d43e4059293222579df8feadb6",
        "urls": [
          "bzz-raw://d30c8ff709dc8b2121757d72c5f6f52d85259b2cb2a2929f87a40af7d67c24fa",
          "dweb:/ipfs/QmUk8zcJKeUbrLfG99y6nyiX6Y3DNuTpp9f7ccciMqeKEM"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILPpriceOracle.sol": {
        "keccak256": "0x1c1ee7a541bbe671eea46e048be8b245b1af7300a5f788852467a3a2a61d5234",
        "urls": [
          "bzz-raw://8725fda5cf6754aaa9619b3c4bc33218585a87a3822518fd977d8e4694ca24db",
          "dweb:/ipfs/QmdF998ega2GzciGLksH6sqNbLMLdKE9X9NurBbkc5MYsm"
        ],
        "license": "UNLICENSED"
      },
      "test/LPMoney.t.sol": {
        "keccak256": "0xa224e38a85d73ab3b98dad7acce720fd9cc908f4482503b65a553f7acc704358",
        "urls": [
          "bzz-raw://3a7d8b68afa12c137a8c5d90720f1f9c4b9ef8abea3b6f01f873ec0b9e271635",
          "dweb:/ipfs/QmcTnWTgYSgWBCUR9FxZquxug5whRb2qywJEJUwwbaj3Kc"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/GhoMock.sol": {
        "keccak256": "0x455cccf9313214b8e7dc16112a1a4317d9f59773883f5dbd47414353020b0bbf",
        "urls": [
          "bzz-raw://dd849746b520c55adbc467d5b02a0471e098e12d8e8d3933c2222a1d07810f53",
          "dweb:/ipfs/Qmap7FQQSfvjRR2Wz3UcYRZQqnf9h4S92LTCzzmqak7VTo"
        ],
        "license": "MIT"
      },
      "test/mocks/LpCollectionMock.sol": {
        "keccak256": "0xc3e0f26d0bab928dcbf6bc6464a971ebaa21c9e88de84a0f0ce7f296f89f1cf6",
        "urls": [
          "bzz-raw://315ed32c48ec0d4dfb5ded1e555f91e141ea5e6f72a73a5dc0e5e39818db378f",
          "dweb:/ipfs/QmWZhc3a6aDyPzojGY4RsFJE2yx9K444RLu85pCWxSH3KE"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/PriceOracleMock.sol": {
        "keccak256": "0x155bb568c70cb380059fbfac0f408fab7337cef0865d88d41dc880fa24556039",
        "urls": [
          "bzz-raw://9a1a8e954440b7543c8908e96511fb3cb89ebcadef65fc278e572878c23df2fe",
          "dweb:/ipfs/QmdKU3WNv5AYCd5eVVLAVnKjS3VpWJaRWuLnSdajxkKk12"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LPMoney.t.sol",
    "id": 50567,
    "exportedSymbols": {
      "GhoMock": [
        50765
      ],
      "IGhoToken": [
        50212
      ],
      "INonfungiblePositionManager": [
        570
      ],
      "LPMoney": [
        50085
      ],
      "LPMoneyTest": [
        50566
      ],
      "LpCollectionMock": [
        51078
      ],
      "PriceOracleMock": [
        51121
      ],
      "Test": [
        12909
      ],
      "console2": [
        31239
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2464:61",
    "nodes": [
      {
        "id": 50237,
        "nodeType": "PragmaDirective",
        "src": "39:24:61",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 50239,
        "nodeType": "ImportDirective",
        "src": "65:119:61",
        "nodes": [],
        "absolutePath": "lib/bunni-oracle/lib/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 571,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50238,
              "name": "INonfungiblePositionManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 570,
              "src": "73:27:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50242,
        "nodeType": "ImportDirective",
        "src": "185:50:61",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 12910,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50240,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12909,
              "src": "193:4:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50241,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31239,
              "src": "199:8:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50244,
        "nodeType": "ImportDirective",
        "src": "236:43:61",
        "nodes": [],
        "absolutePath": "src/LPMoney.sol",
        "file": "../src/LPMoney.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 50086,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50243,
              "name": "LPMoney",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50085,
              "src": "244:7:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50246,
        "nodeType": "ImportDirective",
        "src": "280:58:61",
        "nodes": [],
        "absolutePath": "src/interfaces/IGhoToken.sol",
        "file": "../src/interfaces/IGhoToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 50213,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50245,
              "name": "IGhoToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50212,
              "src": "288:9:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50248,
        "nodeType": "ImportDirective",
        "src": "340:44:61",
        "nodes": [],
        "absolutePath": "test/mocks/GhoMock.sol",
        "file": "./mocks/GhoMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 50766,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50247,
              "name": "GhoMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50765,
              "src": "348:7:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50250,
        "nodeType": "ImportDirective",
        "src": "385:62:61",
        "nodes": [],
        "absolutePath": "test/mocks/LpCollectionMock.sol",
        "file": "./mocks/LpCollectionMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 51079,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50249,
              "name": "LpCollectionMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51078,
              "src": "393:16:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50252,
        "nodeType": "ImportDirective",
        "src": "448:60:61",
        "nodes": [],
        "absolutePath": "test/mocks/PriceOracleMock.sol",
        "file": "./mocks/PriceOracleMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50567,
        "sourceUnit": 51122,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50251,
              "name": "PriceOracleMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51121,
              "src": "456:15:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50566,
        "nodeType": "ContractDefinition",
        "src": "510:1992:61",
        "nodes": [
          {
            "id": 50257,
            "nodeType": "VariableDeclaration",
            "src": "545:25:61",
            "nodes": [],
            "constant": false,
            "functionSelector": "5996db91",
            "mutability": "mutable",
            "name": "ghoToken",
            "nameLocation": "562:8:61",
            "scope": 50566,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGhoToken_$50212",
              "typeString": "contract IGhoToken"
            },
            "typeName": {
              "id": 50256,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50255,
                "name": "IGhoToken",
                "nameLocations": [
                  "545:9:61"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50212,
                "src": "545:9:61"
              },
              "referencedDeclaration": 50212,
              "src": "545:9:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGhoToken_$50212",
                "typeString": "contract IGhoToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50260,
            "nodeType": "VariableDeclaration",
            "src": "576:36:61",
            "nodes": [],
            "constant": false,
            "functionSelector": "bf2e848c",
            "mutability": "mutable",
            "name": "lpCollection",
            "nameLocation": "600:12:61",
            "scope": 50566,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
              "typeString": "contract LpCollectionMock"
            },
            "typeName": {
              "id": 50259,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50258,
                "name": "LpCollectionMock",
                "nameLocations": [
                  "576:16:61"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51078,
                "src": "576:16:61"
              },
              "referencedDeclaration": 51078,
              "src": "576:16:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                "typeString": "contract LpCollectionMock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50263,
            "nodeType": "VariableDeclaration",
            "src": "618:34:61",
            "nodes": [],
            "constant": false,
            "functionSelector": "2630c12f",
            "mutability": "mutable",
            "name": "priceOracle",
            "nameLocation": "641:11:61",
            "scope": 50566,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
              "typeString": "contract PriceOracleMock"
            },
            "typeName": {
              "id": 50262,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50261,
                "name": "PriceOracleMock",
                "nameLocations": [
                  "618:15:61"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51121,
                "src": "618:15:61"
              },
              "referencedDeclaration": 51121,
              "src": "618:15:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                "typeString": "contract PriceOracleMock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50266,
            "nodeType": "VariableDeclaration",
            "src": "658:22:61",
            "nodes": [],
            "constant": false,
            "functionSelector": "ea846d13",
            "mutability": "mutable",
            "name": "lpMoney",
            "nameLocation": "673:7:61",
            "scope": 50566,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LPMoney_$50085",
              "typeString": "contract LPMoney"
            },
            "typeName": {
              "id": 50265,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50264,
                "name": "LPMoney",
                "nameLocations": [
                  "658:7:61"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50085,
                "src": "658:7:61"
              },
              "referencedDeclaration": 50085,
              "src": "658:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LPMoney_$50085",
                "typeString": "contract LPMoney"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50310,
            "nodeType": "FunctionDefinition",
            "src": "687:276:61",
            "nodes": [],
            "body": {
              "id": 50309,
              "nodeType": "Block",
              "src": "711:252:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50269,
                      "name": "ghoToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50257,
                      "src": "721:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGhoToken_$50212",
                        "typeString": "contract IGhoToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 50272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "732:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GhoMock_$50765_$",
                          "typeString": "function () returns (contract GhoMock)"
                        },
                        "typeName": {
                          "id": 50271,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50270,
                            "name": "GhoMock",
                            "nameLocations": [
                              "736:7:61"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 50765,
                            "src": "736:7:61"
                          },
                          "referencedDeclaration": 50765,
                          "src": "736:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GhoMock_$50765",
                            "typeString": "contract GhoMock"
                          }
                        }
                      },
                      "id": 50273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:13:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GhoMock_$50765",
                        "typeString": "contract GhoMock"
                      }
                    },
                    "src": "721:24:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGhoToken_$50212",
                      "typeString": "contract IGhoToken"
                    }
                  },
                  "id": 50275,
                  "nodeType": "ExpressionStatement",
                  "src": "721:24:61"
                },
                {
                  "expression": {
                    "id": 50281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50276,
                      "name": "lpCollection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50260,
                      "src": "755:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                        "typeString": "contract LpCollectionMock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 50279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "770:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LpCollectionMock_$51078_$",
                          "typeString": "function () returns (contract LpCollectionMock)"
                        },
                        "typeName": {
                          "id": 50278,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50277,
                            "name": "LpCollectionMock",
                            "nameLocations": [
                              "774:16:61"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 51078,
                            "src": "774:16:61"
                          },
                          "referencedDeclaration": 51078,
                          "src": "774:16:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                            "typeString": "contract LpCollectionMock"
                          }
                        }
                      },
                      "id": 50280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "770:22:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                        "typeString": "contract LpCollectionMock"
                      }
                    },
                    "src": "755:37:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                      "typeString": "contract LpCollectionMock"
                    }
                  },
                  "id": 50282,
                  "nodeType": "ExpressionStatement",
                  "src": "755:37:61"
                },
                {
                  "expression": {
                    "id": 50288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50283,
                      "name": "priceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50263,
                      "src": "803:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                        "typeString": "contract PriceOracleMock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 50286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "817:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PriceOracleMock_$51121_$",
                          "typeString": "function () returns (contract PriceOracleMock)"
                        },
                        "typeName": {
                          "id": 50285,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50284,
                            "name": "PriceOracleMock",
                            "nameLocations": [
                              "821:15:61"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 51121,
                            "src": "821:15:61"
                          },
                          "referencedDeclaration": 51121,
                          "src": "821:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                            "typeString": "contract PriceOracleMock"
                          }
                        }
                      },
                      "id": 50287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "817:21:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                        "typeString": "contract PriceOracleMock"
                      }
                    },
                    "src": "803:35:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                      "typeString": "contract PriceOracleMock"
                    }
                  },
                  "id": 50289,
                  "nodeType": "ExpressionStatement",
                  "src": "803:35:61"
                },
                {
                  "expression": {
                    "id": 50307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50290,
                      "name": "lpMoney",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50266,
                      "src": "848:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPMoney_$50085",
                        "typeString": "contract LPMoney"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 50296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "878:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "870:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50294,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "870:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "870:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 50300,
                              "name": "ghoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50257,
                              "src": "890:8:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGhoToken_$50212",
                                "typeString": "contract IGhoToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IGhoToken_$50212",
                                "typeString": "contract IGhoToken"
                              }
                            ],
                            "id": 50299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "882:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50298,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "882:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "882:17:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 50303,
                              "name": "lpCollection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50260,
                              "src": "929:12:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                                "typeString": "contract LpCollectionMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                                "typeString": "contract LpCollectionMock"
                              }
                            ],
                            "id": 50302,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "901:27:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$570_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 50304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "901:41:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$570",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        {
                          "id": 50305,
                          "name": "priceOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50263,
                          "src": "944:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                            "typeString": "contract PriceOracleMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$570",
                            "typeString": "contract INonfungiblePositionManager"
                          },
                          {
                            "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                            "typeString": "contract PriceOracleMock"
                          }
                        ],
                        "id": 50293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "858:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_contract$_INonfungiblePositionManager_$570_$_t_contract$_ILPpriceOracle_$50235_$returns$_t_contract$_LPMoney_$50085_$",
                          "typeString": "function (address,address,contract INonfungiblePositionManager,contract ILPpriceOracle) returns (contract LPMoney)"
                        },
                        "typeName": {
                          "id": 50292,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 50291,
                            "name": "LPMoney",
                            "nameLocations": [
                              "862:7:61"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 50085,
                            "src": "862:7:61"
                          },
                          "referencedDeclaration": 50085,
                          "src": "862:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LPMoney_$50085",
                            "typeString": "contract LPMoney"
                          }
                        }
                      },
                      "id": 50306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "858:98:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LPMoney_$50085",
                        "typeString": "contract LPMoney"
                      }
                    },
                    "src": "848:108:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LPMoney_$50085",
                      "typeString": "contract LPMoney"
                    }
                  },
                  "id": 50308,
                  "nodeType": "ExpressionStatement",
                  "src": "848:108:61"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "696:5:61",
            "parameters": {
              "id": 50267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:2:61"
            },
            "returnParameters": {
              "id": 50268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:61"
            },
            "scope": 50566,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50376,
            "nodeType": "FunctionDefinition",
            "src": "969:368:61",
            "nodes": [],
            "body": {
              "id": 50375,
              "nodeType": "Block",
              "src": "997:340:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1029:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1021:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50316,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1021:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1021:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50313,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "1007:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15050",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1010:10:61",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14835,
                      "src": "1007:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50321,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1074:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1066:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50325,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1066:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50322,
                        "name": "lpCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50260,
                        "src": "1044:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                          "typeString": "contract LpCollectionMock"
                        }
                      },
                      "id": 50324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1057:8:61",
                      "memberName": "safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50801,
                      "src": "1044:21:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:35:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50330,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:35:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50336,
                            "name": "lpMoney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "1128:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          ],
                          "id": 50335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1120:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50334,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1120:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1120:16:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 50338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 50331,
                        "name": "lpCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50260,
                        "src": "1089:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                          "typeString": "contract LpCollectionMock"
                        }
                      },
                      "id": 50333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1102:17:61",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46783,
                      "src": "1089:30:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 50339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50340,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:54:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 50344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1181:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 50341,
                        "name": "priceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50263,
                        "src": "1154:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                          "typeString": "contract PriceOracleMock"
                        }
                      },
                      "id": 50343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1166:14:61",
                      "memberName": "setMockedPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51120,
                      "src": "1154:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:32:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50346,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:32:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1209:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50347,
                        "name": "lpMoney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50266,
                        "src": "1196:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPMoney_$50085",
                          "typeString": "contract LPMoney"
                        }
                      },
                      "id": 50349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1204:4:61",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50007,
                      "src": "1196:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:15:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50352,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:15:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307831",
                                "id": 50358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1258:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "0x1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 50357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1250:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50356,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1250:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1250:12:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50354,
                            "name": "ghoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50257,
                            "src": "1231:8:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGhoToken_$50212",
                              "typeString": "contract IGhoToken"
                            }
                          },
                          "id": 50355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1240:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46414,
                          "src": "1231:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1231:32:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "383030",
                        "id": 50361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1265:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        }
                      ],
                      "id": 50353,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3215,
                        3240,
                        3253,
                        3269,
                        3311,
                        3353,
                        3395,
                        3432,
                        3469,
                        3506,
                        1050,
                        1075,
                        1105,
                        1130,
                        1189,
                        1214,
                        1244,
                        1269,
                        2742,
                        2777
                      ],
                      "referencedDeclaration": 1244,
                      "src": "1222:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 50362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50363,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:47:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1309:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 50365,
                            "name": "lpCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50260,
                            "src": "1288:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                              "typeString": "contract LpCollectionMock"
                            }
                          },
                          "id": 50366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1301:7:61",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46671,
                          "src": "1288:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 50368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1288:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50371,
                            "name": "lpMoney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "1321:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          ],
                          "id": 50370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1313:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50369,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1313:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1313:16:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50364,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3215,
                        3240,
                        3253,
                        3269,
                        3311,
                        3353,
                        3395,
                        3432,
                        3469,
                        3506,
                        1050,
                        1075,
                        1105,
                        1130,
                        1189,
                        1214,
                        1244,
                        1269,
                        2742,
                        2777
                      ],
                      "referencedDeclaration": 1050,
                      "src": "1279:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 50373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:51:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50374,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:51:61"
                }
              ]
            },
            "functionSelector": "1e2fc4f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mint",
            "nameLocation": "978:9:61",
            "parameters": {
              "id": 50311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "987:2:61"
            },
            "returnParameters": {
              "id": 50312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:61"
            },
            "scope": 50566,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50458,
            "nodeType": "FunctionDefinition",
            "src": "1343:438:61",
            "nodes": [],
            "body": {
              "id": 50457,
              "nodeType": "Block",
              "src": "1372:409:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1404:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1396:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50382,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1396:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50379,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "1382:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15050",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1385:10:61",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14835,
                      "src": "1382:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50387,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1449:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1441:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50391,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1441:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1441:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50388,
                        "name": "lpCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50260,
                        "src": "1419:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                          "typeString": "contract LpCollectionMock"
                        }
                      },
                      "id": 50390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1432:8:61",
                      "memberName": "safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50801,
                      "src": "1419:21:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1419:35:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50396,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:35:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50402,
                            "name": "lpMoney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "1503:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          ],
                          "id": 50401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1495:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1495:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1495:16:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 50404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1513:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 50397,
                        "name": "lpCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50260,
                        "src": "1464:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                          "typeString": "contract LpCollectionMock"
                        }
                      },
                      "id": 50399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1477:17:61",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46783,
                      "src": "1464:30:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 50405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50406,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:54:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 50410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 50407,
                        "name": "priceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50263,
                        "src": "1528:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                          "typeString": "contract PriceOracleMock"
                        }
                      },
                      "id": 50409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1540:14:61",
                      "memberName": "setMockedPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51120,
                      "src": "1528:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:32:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50412,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:32:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1583:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50413,
                        "name": "lpMoney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50266,
                        "src": "1570:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPMoney_$50085",
                          "typeString": "contract LPMoney"
                        }
                      },
                      "id": 50415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1578:4:61",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50007,
                      "src": "1570:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:15:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50418,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:15:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50424,
                            "name": "lpMoney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "1621:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          ],
                          "id": 50423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1613:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50422,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1613:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1613:16:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "383030",
                        "id": 50426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1631:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        }
                      ],
                      "expression": {
                        "id": 50419,
                        "name": "ghoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50257,
                        "src": "1596:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGhoToken_$50212",
                          "typeString": "contract IGhoToken"
                        }
                      },
                      "id": 50421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1605:7:61",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46444,
                      "src": "1596:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 50427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:39:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50428,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:39:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1659:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50429,
                        "name": "lpMoney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50266,
                        "src": "1645:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPMoney_$50085",
                          "typeString": "contract LPMoney"
                        }
                      },
                      "id": 50431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1653:5:61",
                      "memberName": "close",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49833,
                      "src": "1645:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:16:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50434,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:16:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307831",
                                "id": 50440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1708:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "0x1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 50439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1700:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50438,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1700:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1700:12:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50436,
                            "name": "ghoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50257,
                            "src": "1681:8:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGhoToken_$50212",
                              "typeString": "contract IGhoToken"
                            }
                          },
                          "id": 50437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1690:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46414,
                          "src": "1681:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1681:32:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1715:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 50435,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3215,
                        3240,
                        3253,
                        3269,
                        3311,
                        3353,
                        3395,
                        3432,
                        3469,
                        3506,
                        1050,
                        1075,
                        1105,
                        1130,
                        1189,
                        1214,
                        1244,
                        1269,
                        2742,
                        2777
                      ],
                      "referencedDeclaration": 1244,
                      "src": "1672:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 50444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:45:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50445,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:45:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1757:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 50447,
                            "name": "lpCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50260,
                            "src": "1736:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                              "typeString": "contract LpCollectionMock"
                            }
                          },
                          "id": 50448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1749:7:61",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46671,
                          "src": "1736:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 50450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1736:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1769:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1761:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1761:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1761:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50446,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3215,
                        3240,
                        3253,
                        3269,
                        3311,
                        3353,
                        3395,
                        3432,
                        3469,
                        3506,
                        1050,
                        1075,
                        1105,
                        1130,
                        1189,
                        1214,
                        1244,
                        1269,
                        2742,
                        2777
                      ],
                      "referencedDeclaration": 1050,
                      "src": "1727:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 50455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50456,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:47:61"
                }
              ]
            },
            "functionSelector": "70355592",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_close",
            "nameLocation": "1352:10:61",
            "parameters": {
              "id": 50377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:2:61"
            },
            "returnParameters": {
              "id": 50378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:61"
            },
            "scope": 50566,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50565,
            "nodeType": "FunctionDefinition",
            "src": "1787:567:61",
            "nodes": [],
            "body": {
              "id": 50564,
              "nodeType": "Block",
              "src": "1821:533:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1853:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1845:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1845:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1845:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50461,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "1831:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15050",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1834:10:61",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14835,
                      "src": "1831:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1831:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50469,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 50475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1898:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 50474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1890:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1890:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1890:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50470,
                        "name": "lpCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50260,
                        "src": "1868:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                          "typeString": "contract LpCollectionMock"
                        }
                      },
                      "id": 50472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1881:8:61",
                      "memberName": "safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50801,
                      "src": "1868:21:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:35:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50478,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:35:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50484,
                            "name": "lpMoney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "1952:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          ],
                          "id": 50483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1944:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50482,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1944:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1944:16:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 50486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1962:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 50479,
                        "name": "lpCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50260,
                        "src": "1913:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                          "typeString": "contract LpCollectionMock"
                        }
                      },
                      "id": 50481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1926:17:61",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46783,
                      "src": "1913:30:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 50487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50488,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:54:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 50492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 50489,
                        "name": "priceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50263,
                        "src": "1977:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                          "typeString": "contract PriceOracleMock"
                        }
                      },
                      "id": 50491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1989:14:61",
                      "memberName": "setMockedPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51120,
                      "src": "1977:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:32:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50494,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:32:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2032:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50495,
                        "name": "lpMoney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50266,
                        "src": "2019:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPMoney_$50085",
                          "typeString": "contract LPMoney"
                        }
                      },
                      "id": 50497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2027:4:61",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50007,
                      "src": "2019:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:15:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50500,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:15:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307832",
                            "id": 50506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2067:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "0x2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 50505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2059:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2059:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2059:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50501,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "2045:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15050",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2048:10:61",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14835,
                      "src": "2045:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50509,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:27:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307832",
                            "id": 50515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2104:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "0x2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 50514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2096:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2096:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "383030",
                        "id": 50517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2110:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        }
                      ],
                      "expression": {
                        "id": 50510,
                        "name": "ghoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50257,
                        "src": "2082:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGhoToken_$50212",
                          "typeString": "contract IGhoToken"
                        }
                      },
                      "id": 50512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2091:4:61",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50155,
                      "src": "2082:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 50518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2082:32:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50519,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:32:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50525,
                            "name": "lpMoney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "2149:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPMoney_$50085",
                              "typeString": "contract LPMoney"
                            }
                          ],
                          "id": 50524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2141:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50523,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2141:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2141:16:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "383030",
                        "id": 50527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2159:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        }
                      ],
                      "expression": {
                        "id": 50520,
                        "name": "ghoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50257,
                        "src": "2124:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGhoToken_$50212",
                          "typeString": "contract IGhoToken"
                        }
                      },
                      "id": 50522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2133:7:61",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46444,
                      "src": "2124:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 50528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2124:39:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50529,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:39:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "383530",
                        "id": 50533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_850_by_1",
                          "typeString": "int_const 850"
                        },
                        "value": "850"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_850_by_1",
                          "typeString": "int_const 850"
                        }
                      ],
                      "expression": {
                        "id": 50530,
                        "name": "priceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50263,
                        "src": "2173:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceOracleMock_$51121",
                          "typeString": "contract PriceOracleMock"
                        }
                      },
                      "id": 50532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2185:14:61",
                      "memberName": "setMockedPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51120,
                      "src": "2173:26:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:31:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50535,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:31:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 50539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2232:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 50536,
                        "name": "lpMoney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50266,
                        "src": "2214:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LPMoney_$50085",
                          "typeString": "contract LPMoney"
                        }
                      },
                      "id": 50538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2222:9:61",
                      "memberName": "liquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49942,
                      "src": "2214:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 50540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:20:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50541,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:20:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307832",
                                "id": 50547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2281:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "0x2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 50546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2273:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50545,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2273:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2273:12:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50543,
                            "name": "ghoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50257,
                            "src": "2254:8:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGhoToken_$50212",
                              "typeString": "contract IGhoToken"
                            }
                          },
                          "id": 50544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2263:9:61",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46414,
                          "src": "2254:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 50549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:32:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2288:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 50542,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3215,
                        3240,
                        3253,
                        3269,
                        3311,
                        3353,
                        3395,
                        3432,
                        3469,
                        3506,
                        1050,
                        1075,
                        1105,
                        1130,
                        1189,
                        1214,
                        1244,
                        1269,
                        2742,
                        2777
                      ],
                      "referencedDeclaration": 1244,
                      "src": "2245:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 50551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:45:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50552,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:45:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2330:1:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 50554,
                            "name": "lpCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50260,
                            "src": "2309:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LpCollectionMock_$51078",
                              "typeString": "contract LpCollectionMock"
                            }
                          },
                          "id": 50555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2322:7:61",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46671,
                          "src": "2309:20:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 50557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2309:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307832",
                            "id": 50560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2342:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "0x2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 50559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2334:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50558,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2334:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2334:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50553,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3215,
                        3240,
                        3253,
                        3269,
                        3311,
                        3353,
                        3395,
                        3432,
                        3469,
                        3506,
                        1050,
                        1075,
                        1105,
                        1130,
                        1189,
                        1214,
                        1244,
                        1269,
                        2742,
                        2777
                      ],
                      "referencedDeclaration": 1050,
                      "src": "2300:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 50562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2300:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50563,
                  "nodeType": "ExpressionStatement",
                  "src": "2300:47:61"
                }
              ]
            },
            "functionSelector": "3a61420c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_liqudation",
            "nameLocation": "1796:15:61",
            "parameters": {
              "id": 50459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:2:61"
            },
            "returnParameters": {
              "id": 50460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:61"
            },
            "scope": 50566,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50253,
              "name": "Test",
              "nameLocations": [
                "534:4:61"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12909,
              "src": "534:4:61"
            },
            "id": 50254,
            "nodeType": "InheritanceSpecifier",
            "src": "534:4:61"
          }
        ],
        "canonicalName": "LPMoneyTest",
        "contractDependencies": [
          50085,
          50765,
          51078,
          51121
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50566,
          12909,
          12858,
          8456,
          8131,
          7338,
          5278,
          4514,
          3021,
          3087,
          3084
        ],
        "name": "LPMoneyTest",
        "nameLocation": "519:11:61",
        "scope": 50567,
        "usedErrors": [],
        "usedEvents": [
          735,
          739,
          743,
          747,
          751,
          755,
          759,
          763,
          769,
          775,
          783,
          791,
          797,
          803,
          809,
          815,
          3109,
          3114,
          3119,
          3126,
          3133,
          3140
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 61
}